NOTE "CREATOR" "Designer Version: 11.2.0.26";
NOTE "CAPTURE" "11.2.0.26";
NOTE "DEVICE" "A3P250";
NOTE "PACKAGE" "A3P250-vq100";
NOTE "DATE" "2014/07/25";
NOTE "TIME" "15:39:44";
NOTE "STAPL_VERSION" "JESD71";
NOTE "VENDOR" "Microsemi Corporation";
NOTE "IDCODE" "03A141CF";
NOTE "IDMASK" "06FFFFFF";
NOTE "DESIGN" "test0";
NOTE "DESIGN_DIRECTORY" "E:\xl\project\FPGA\libero11.2\PT_TO_FT3_1\designer\impl1\";
NOTE "CHECKSUM" "2082";
NOTE "SECURITY" "Disable";
NOTE "ALG_VERSION" "20";
NOTE "MAP_VERSION" "1";
NOTE "TOOL_VERSION" "1";
NOTE "MAX_FREQ" "10000000";
NOTE "SILSIG" "00000000";
NOTE "SPEED_GRAD" "-2";
NOTE "TEMP_GRAD" "COM";
NOTE "PLAYER_VERSION_VARIABLE" "PLAYERVERSIONVARIABLE";
NOTE "PLAYER_VERSION_SW_VARIABLE" "PLAYERVERSIONSWVARIABLE";

ACTION PROGRAM = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       W_INITIALIZE,
       DO_ERASE,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION PROGRAM_ARRAY = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       AW_INITIALIZE,
       DO_ERASE_ARRAY,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION ERASE_ARRAY = 
       VERIFY_IDCODE,
       AW_INITIALIZE,
       DO_ERASE_ARRAY_ONLY,
       DO_EXIT;
ACTION ERASE = 
       VERIFY_IDCODE,
       W_INITIALIZE,
       DO_ERASE_ONLY,
       DO_EXIT;
ACTION ERASE_ALL = 
       VERIFY_IDCODE,
       INITIALIZE,
       DO_ERASE_ALL,
       DO_EXIT;
ACTION VERIFY = 
       VERIFY_IDCODE,
       R_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION VERIFY_ARRAY = 
       VERIFY_IDCODE,
       AR_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION READ_IDCODE = 
       DO_READ_IDCODE;
ACTION VERIFY_DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_VERIFY_DEVICE_INFO,
       DO_EXIT;
ACTION DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_DEVICE_INFO,
       DO_QUERY_SECURITY,
       DO_EXIT;



DATA CONSTBLOCK;
    INTEGER IEEE1532=0;
    INTEGER STAPL=1;
    INTEGER DIRECTC=2;
    INTEGER PDB=3;
    INTEGER SVF=4;
    INTEGER FP=0;
    INTEGER FPLITE=1;
    INTEGER FP3=2;
    INTEGER SCULPTW=3;
    INTEGER BPW=4;
    INTEGER DIRECTCP=5;
    INTEGER STP=6;
    INTEGER FP4=7;
    INTEGER FP33=0;
    INTEGER FP34=1;
    INTEGER FP40=2;
    INTEGER FP41=3;
    INTEGER FP42=4;
    INTEGER FP50=5;
    INTEGER FP51=6;
    INTEGER FP60=7;
    INTEGER FP61=8;
    INTEGER FP62=9;
    INTEGER FP84=11;
    INTEGER FP85=12;
    INTEGER FP86=13;
    INTEGER FP90=14;
    INTEGER FP91=15;
    INTEGER FP100=16;
    INTEGER FP_11=19;
    INTEGER FP_11_1=20;
    INTEGER UNKNOWN=127;
    INTEGER UNSPECIFIED=0;
    INTEGER QN132=1;
    INTEGER VQ100=2;
    INTEGER TQ144=3;
    INTEGER PQ208=4;
    INTEGER FG144=5;
    INTEGER FG256=6;
    INTEGER FG484=7;
    INTEGER FG676=8;
    INTEGER FG896=9;
    INTEGER QN108=10;
    INTEGER QN180=11;
    INTEGER TQ100=12;
    INTEGER CQ208=13;
    INTEGER FG1152=14;
    INTEGER BG456=15;
    INTEGER UNDEFINED=63;
    INTEGER GRADE_UNSPEC=0;
    INTEGER GRADE_1=1;
    INTEGER GRADE_2=2;
    INTEGER GRADE_3=3;
    INTEGER GRADE_F=4;
    INTEGER GRADE_STD=5;
    INTEGER GRADE_4=6;
    INTEGER GRADE_UNDEF=7;
ENDDATA;

DATA PARAMETERS;
    INTEGER FREQ =4;
ENDDATA;

DATA GV;
    INTEGER ULOPT1_BITLOCATION =11;
    INTEGER ULOPT0_BITLOCATION =10;
    INTEGER ULUWE_BITLOCATION =9;
    INTEGER ULARE_BITLOCATION =8;
    INTEGER ULUPC_BITLOCATION =7;
    INTEGER ULUFE_BITLOCATION =6;
    INTEGER ULUFP_BITLOCATION =5;
    INTEGER ULUFJ_BITLOCATION =4;
    INTEGER ULFLR_BITLOCATION =3;
    INTEGER ULULR_BITLOCATION =2;
    INTEGER ULAWE_BITLOCATION =1;
    INTEGER ULARD_BITLOCATION =0;
    BOOLEAN BUFF128[128];
    BOOLEAN BUFF32[32];
    INTEGER I;
    INTEGER J;
    INTEGER TEMP;
    INTEGER SDNUMBER;
    INTEGER ROWNUMBER;
    INTEGER DATAINDEX =0;
    INTEGER FROMROWNUMBER =1;
    INTEGER AESBLOCK;
    BOOLEAN ID[32];
    BOOLEAN PASS = 1;
    BOOLEAN FADDR[3];
    INTEGER STATUS =0;
    BOOLEAN SILSIG[32] = $00000000;
    BOOLEAN ISC_CONFIG_RESULT[18];
    BOOLEAN VERIFYEOL[2];
    BOOLEAN COMBERASESELECT[23];
    BOOLEAN SECKEY_OK = 1;
    BOOLEAN SECREG[44];
    BOOLEAN ULUWE = 0;
    BOOLEAN ULARE = 0;
    BOOLEAN ULUPC = 0;
    BOOLEAN ULUFE = 0;
    BOOLEAN ULUFP = 0;
    BOOLEAN ULUFJ = 0;
    BOOLEAN ULFLR = 0;
    BOOLEAN ULULR = 0;
    BOOLEAN ULAWE = 0;
    BOOLEAN ULARD = 0;
    BOOLEAN ULOPT[2];
    BOOLEAN SUROWCHECKSUM[16];
    INTEGER SUROWCYCLECOUNT =0;
    INTEGER ACT_UROW_CYCLE_COUNT =0;
    BOOLEAN ACT_UROW_DESIGN_NAME[70] = $01020408117a79cb86;
    BOOLEAN SUROWDESIGNNAME[70];
    BOOLEAN SUROWPROGMETHOD[3];
    BOOLEAN ACT_UROW_ALGO_VERSION[7] = $14;
    BOOLEAN SUROWALGOVERSION[7];
    BOOLEAN SUROW_PKG_TYPE[6];
    BOOLEAN ACT_UROW_SW_VERSION[7];
    BOOLEAN SUROW_SW_VERSION[7];
    INTEGER PLAYERVERSIONVARIABLE =0;
    INTEGER PLAYERVERSIONSWVARIABLE =0;
    INTEGER SCULPTORMAJORBASE =5;
    INTEGER SCULPTORMINORBASE =16;
    BOOLEAN ACT_UROW_PROGRAM_SW[4];
    BOOLEAN SUROWPROGRAMSW[4];
    BOOLEAN SUROW_SPEED_GRADE[3];
    BOOLEAN SUROW_SRAM_DISTURB[1];
    BOOLEAN ISERASEONLY = 0;
    BOOLEAN ISRESTOREDESIGN = 0;
    BOOLEAN FLAGDISPLAYCYC = 1;
    BOOLEAN ISPRGARRAY = 0;
    BOOLEAN BSRPATTERN[708] = $9249249249249249249249249249249249249249249249249
        249249249249249249249249249249249249249249249249249249249249249249249249
        24924924924924924924924924924924924924924924924924924924;
    BOOLEAN SAMPLEMASK[708] = $0000000000000000000000000000000000000000000000000
        000000000000000000000000000000000000000000000000000000000000000000000000
        00000000000000000000000000000000000000000000000000000000;
    BOOLEAN BSR[708];
    BOOLEAN SAMPLE_DEVICE[708];
    BOOLEAN RLOCK[832] = $7fffffcffffffbfffffeffffffbfffffefffffffffffffffffff3f
        ffffcffffff3fffffcffffff3fffffcffffff3fffffdffffff3fffffcffffff3fffffcff
        ffff3fffffcffffff3fffffdffffffffffffffffffffffffffffffffffffffffffffffff
        ffffffffff;
    BOOLEAN ARRAYRONLY = 1;
    BOOLEAN CHKARRAY = 0;
    BOOLEAN FROMRONLY = 1;
    BOOLEAN CHKFROM = 0;
    BOOLEAN CHKNVM = 0;
    BOOLEAN CHKSEC = 1;
    BOOLEAN PERMLOCK = 0;
    INTEGER HEX[16] = 70,69,68,67,66,65,57,56,55,54,53,52,51,50,49,48;
    INTEGER NUMBEROFFROMROWS =8;
    BOOLEAN INITIALIZE_DATA[5] = $00;
    INTEGER SDTILE;
    INTEGER NUMBEROFSDTILES =4;
    INTEGER NUMBEROFMAPROWS =2300;
    INTEGER IDREV;
    INTEGER IDFAB;
    INTEGER BM7DEVICE =0;
    INTEGER BM1DEVICE =0;
    BOOLEAN M1BUFF[128] = $acdd6548ccb488863e291eb18fe95077;
    BOOLEAN M7BUFF[128] = $e137623a2eeee91126015f3f73664945;
    BOOLEAN IDCODEVALUE[32] = $03a141cf;
    BOOLEAN IDMASK[32] = $06ffffff;
    INTEGER SECKEYCHK =0;
    INTEGER DESIGNPKGTYPE =2;
    BOOLEAN ACT_UROW_PROG_METHOD[3] = $1;
    INTEGER LABEL_SEPARATOR =0;
    INTEGER ROWITERATION =100;
    INTEGER PAGEITERATION =100;
    INTEGER PERCENT_UPDATE;
    INTEGER DIFFERENCE;
    INTEGER UNIQUEEXITCODE =0;
ENDDATA;

DATA BITSTREAM;
    BOOLEAN UROW[128];
    BOOLEAN UROW_MASK[128] = $fffffffffffffffffffffffffe01ffc0;
    BOOLEAN DATASTREAM[1913600] = @WPw00000110040W0W000020G000400108002200000Wwc
        qssso0000p@@lF999IjjjQp0000_@x@@IYaatcjj50000y_@@7HIIIORRRR36uXaa49jjTDq
        WD2000y@@EH0vssMj90008@@z@69HIo000049IIICIII2Va00008III0HII2i134999H899f
        67Waaa4aaaKD020Za491aa8900gX7GIIIA0000800m0G0aaaa9mWauWku00000IIIIg1Vqss
        sosssc3999A1000jjjQpjjPRMIYay0000tcjjbMjjj8III20000ORRR3RRRhWaaa3ZWQW3sO
        RRssba897000mskJAGIIIYC000Wbaa8vIIaaJRpsEJYaaD9IIo4999sijjz8999B999fKHWj
        jj19999aaaaGIII2QRRpIIIY4IIoQm6caaausssgZaa4PIIIdW0PRRRsIIIa600So88EH0II
        IYxa1r72IF6WaaaySHGDW50IIIr07AK6KV8O0OGDuWIQ1r02AY4K3QeTDHDu22000r05w4Ae
        ssscJIIIUy0ejjj2aaa84000G00e6GGhK1ijjjYaaa2d7K3w0JIIIkyWQW2qsssWjjjvIIIY
        O@@l@jjDR7RRssaa89X@x@Vsk6KW99992@@@_nssiDjjT@80n@@VD84LIII4@@@zjjjPpQRh
        JW04@@@_GRRrMRRpsijLRxlDRRtMjjTtijjNrss6pssssssscsssMHRRRMQRRrYjjPRijLRp
        sMD01sORRh1ymssscvssMjRRRsCRRrsljL3GWz000040030OK3uK@Z130Br9SX000WQ0D2De
        fjmf1WCZJMB22jOho2q_FGp@1Q_FGp@1Q_FGp@1Q_FG3l8999HIII2baa41999oIIIaeaa89
        89HIMIYa49f6G10999HGIIc1W089992IIIaaaa81IIg6W7T2ce6W6H3UAGZ@3qu@0D_FG3Nh
        4q0GIIIa200YKW0C000W899BpyWS3LOKH3QFyWQ00fJ05G000q9m1x8Um00C0200O0WTw4e1
        8000T2GWaaa430000IIIa3000G99HI0000ma49920r0KW00000999vAGGD06asv1r0qHd0JK
        ou1caaae0000KIIg@02KIII6Q01z8OID0Kq9m5X0O0GIIIK000L1G010000999o000w3uWM9
        88HW4ECuWQ06fJ0AobaWq0A0G99PQ04W899f608w48YQ06fJ0760u@10EjuBR32wl0q_Fmf@
        3Sw@01@FUa@2R1wW6_FE1F3E1D20001rriIIIouukG999PFSNK3G71F_Vm9@7SYx1FYNQ064
        eHL1DWMmZ@7yu@1F_@00@7yu@1F_VmZ@7yu@1F_VmM@tCp@1F_VmZ@7yu@1F_Vm9@7yu@1F6
        lijjD3000Wsssi50000QRps6000WiDRR70r0W0WjjDR000r0GmDX4ejjjf6WHw482ssssGII
        IaRRRp899H2jjDRXa49fssijJIaa4sM3G1Yjjjh1G1YjjjQaaag18aE1emssscJIIIGRRRs9
        99Hgjjz4m1CJIIaussgjIIg602iGIIY4RRxMW5g1eZE1ce6020000uaaa42000GIIIa2009H
        U0eaa49200@CUmvX70999fFI5g1GZE1iG2@@l@Xa499@@_@JIaa4@x@@DHII2l@@@79999r0
        aW799fQ0809999u@@VFaaar0GId0DuZaayZ02KRRR@uW1tFG0sssM5000WQRRrA00K3W23FG
        0sssss28msssID0cq9G3r0Gm00@F0m@1RzVmZ@7yu@1F_VmZ@76s@1ezVmZ@7So@1F_VCCd6
        So@1F_VW6l5yu@1F_VmZ@F0m@1ezVmM@7yu@1F_VmZ@7So@XXzV0D@7yu@1F_VmZ@7So@1dy
        VmZ@7yu@1F_VmZ@F0m@1ezVmM@7yu@1F_VmZ@7So@1F_V0D@7yu@1F_VmZ@7So@1dyVmZ@7y
        u@1F_VmZ@F0m@1ezVmM@7yu@1F_VmZ@7So@X6yV0D@7yu@1F_VmZ@7So@1dyVmZ@7yu@1F_V
        mZ@F0m@1ezVmZ@7yu@1F_VmZ@7So@X6yV0D@7yu@1F_VmZ@7So@1F_VmZ@7yu@1F_VmZ@F0m
        @1ezVmZ@7yu@1F_VmZ@7yu@X6yV0D@7yu@1F_VmZ@7So@1F_VmZ@7yu@1F_VmZ@F0m@1ezVm
        Z@7yu@1F_VmZ@7yu@X6yV0D@7yu@1F_VmZ@7So@1F_VmZ@7yu@1F_VmZ@F0m@1F_VmZ@7yu@
        1F_VmZ@76s@X6yV0D@7yu@1F_VmZ@7So@1F_VmZ@7yu@1F_VmZ@F0m@1F_VmZ@7yu@1F_VmZ
        @76s@X6yV0D@7yu@1F_VmZ@7So@1F_VmZ@7yu@1F_VmZ@F0m@1qyVmZ@7yu@1F_VmZ@76s@X
        6yV0D@7yu@1F_VmZ@7So@1F_VmZ@7yu@1F_VmZ@F0m@1qyVmZ@7yu@1F_VmZ@76s@X6yV0D@
        7yu@1d05G00WW7@Fun@3Ev@W79ED03Y68798991FQ2100WW775G10WibjjE1MmRRR0400oW7
        b2RRZ4B99NjjjH4aa4w4u0JRRd88992Uq9RURRE1991jijr901ifjjXKaa8tosEunf400de9
        9H0000YiaaqW080aa4GmZKvN@@7aWaKd0BO99Xtz@@HmZH18000jfjTd070G000RQRRmZZ12
        00O00o0a00qt7nG00060Ojk1E0I00GCCb5D0QfEEzCL94u4NH1yGmZ@7Wsyvdnm3TbzTIM3D
        mHOO@7Qm@H30sD8TC0WLlTGGm99VFm1H5MMmZH57d2I0GI2UShs2c0MIIImZ@t9GA7TWMq0N
        4e1NZwmGmZ@7Dm8IGIoacaa4D01qaai2UCN04001FU0VRRBW000ezjjvW200oosEunfG99ng
        jjDY4aaWcssMGGII4BQRr9395yuJsossSIII2RARpE199IjiDRZ4a89sp2UKB80082MII080
        08989H2200eqaaW7Vo@y@VmZ4u_@@4B99Xl_@@W79Gy@@XWaaaW7T2010WQJRR2800T2WWij
        j0000KcssM_TitP7B_ziAoJmW25kA_gnYqvZe1SgJW5QZ3hxkMB7X62DWX0dU210GGS2P444
        JI002YNiic1Q8A062GBguuGhWWO2De62001HgWMq0AS7sTnN95800WRCFuU4g0800Cqn2r_G
        Ge1TH0008Q0Bs12jOooAEXkwhWj8Md8uHnkj8X0RfDwc62U4B89P9T2e089HfE1CWiaaG4UO
        9899hJ0281915Xd11FMLCCd5gpV1s_VmZk6D0Mn9yLm074y8K0n00abjjP0X00qsocj0b00O
        VRssXY00aj7y8Ki4jjXiWa8sIscH2KImZ40IGIYOOQhE11fW7VoUmscJAJIOBPR1FI03GRR8
        W89Y5ajPa2a4yuJ0910SQII21W008fD9I0200aWa891u00KQea4_Funcy9y@32IIYyj_lF90
        9Iyp__tia89yAw@F2EuneC00r8fj50I00esqsEGI00ORQRLW100gfkDuHk60uO0100RF_NpC
        RLup3XwWM0DSH000uiXos5TjG3C8eRnYJ8X8ygAcCvg18A02001FEd800WQtG8i@3YWO91A0
        0T2G0030Wa6EeGk960ege1wgEb2IdGYOBaQEG2cCsB0100G000kWH12000Z3aGe1C18088QW
        CQD9BG00Gnajsv494rnJV20HSFYLE03rdyqw3S4AgK5csGqDH1800eJW6w6GXW7VIIIMY4a4
        bE1EWbae4D9982IIM1rLLq068899J2MI2b4a41899oIGI2UChcMK87Aj2rHC0300LULMn064
        DW61F_VyYjGQIoAGZgWaaeq9W1IGIIw4W0GIIM1FAMq6C4yuI0F00abkjP8K00qUscj0n00G
        @PssW500ar5y8KiWijX8Xa8tYscHYGY4QARs21AII5ePRd8899sEunciYijv4ma4qIscT0II
        aA8Qs6X0HIkaORZ6Cunei00dg89HWI00YmaaK0A00I0JI4W100g599undy1z@3AKIYi5_lFP
        89IyL__tiX89SGx@FWAuHe0K20ecWsc08000BURs1X10WDePRH200e4EDW260u@dnDvifh60
        OkOru8u4c0204aBG6H3W4G40WMABBD124200a_fV1FAM4Hk5JcJ24006xOXmaPe_HiI2OYu4
        ug3W4YWWB2000TQWLXA64fo1H3OGWWL5D04DkmGk1C1608Oxrr2DWWb1Cuo162dGge1KutNn
        Y6GY0qK_Pwj6y1YWJgAUn6YJ0hF1i8wcl2DmWW7TI919P3TEmII2gJW22gx9baaa29993Uy0
        9199T2aGmZGX0028uH3M4WahZgAS2d8000X008Ozx0B80fUEC01W0G88BSU431FIBaa4L999
        1QIIow4WX0DU2f99Pd0A8D999GZ62Gxh4NI8unb08008RRRpWO0GmZ5W00eLRRRe100oW7ZY
        DbjDa0a4vGssC24IaGJRpM88HIgXSmZJP9PRp9f99e4iDxKWa8rIqiDI2YaS8ns61SmZH110
        EJMIYWb004X99fT2S0B00AAII21FwaBg@@Q080f@@96II2Fj@@C9991No@xZuaCund0020Ws
        csc0P0007QRs101r0GW2b00GDej1FAr3Cczj84dKjLOODC0mLTAf0W00WPxvY500uIKDqrm3
        1di4010WE180800Gh944D0M1Fo0W40WZ64Bq02800Gc9PN0210UfpXj6C8_gd02044D0411L
        580WWmKd8UUi62OYe1OA_g22kFjr4c82Ye2gZD8000G000GG40yf22Rnerm04qgY21DeLE34
        4DW4n9ma000W_fC0G000e00WG3oI00GGq094OhPnZu504WWF1o8QWb40024eHPZFgHWjO1W0
        08228gE090300T24HnI94yeL51KGL7A4yeJ88Q9LI2G2bWaiJ02aWaaq9m14aa4Ymx9PB99G
        0IKYmx02IY2aaaWe99PPIII8E1dYVmWOBOxwNB2RHA2200ZrgL5il58u5HiMMi5F9B99fJ06
        eiaa4yOJ0989Z681899AT2OGK7A4y8L1RHGD0M4yuIG200w4u0@ssMeb00GRRRpO500aajTm
        ZFnoos6I0IYS9RR6919I8WjPB0W89LYcjTsHmZGP0PRpXy99eqiDxGaa8L2siDA06yO1Waa4
        2Uq90400ETD9Xq2004Wa4f8000IQIa4a200gD3U4Atm@@WYWa8Bv@xpMIY43jl@D19I2Jq_@
        3W2U4AeX00e9fj9G000GmscT8300OQRsMi000Af3USg_ma3GG0m9YSDAv4RFILrE7KhbNnAP
        m00B8800e7J6oQO94000T2iWW00WS1O8w6qwPsjBl_A_Af2D0YWWe2W20G4U8SNw3nazqA7J
        S2W1H3yqk4S4R1Mn9G0800WH0C82YbW00080000X20mG08iroLG000EHb0Y000o000QE9iEp
        F0200Gq06qwc21D8b000WrX8ODt6608A5000rjqmZ194QmJT1Hmydn5eHOFQuGmzdDbWO1Fs
        5090Wb0eew0c8104Koe7X6S420WW4Md8uHdGIIIgWaaCEE4889AHII2YWaaLGT959P2T2aW4
        aaiE18maa4KGT94ZfLbNfLIyZ4rHm1dGsDcJ4dWO1F_q8050raaiJ02abaa4le2H3GLd0409
        99BQW6YJegmmi8unb0900K301I00ejTRRns000jjjDps00GQps1F_4JQRR80991FI0I8919e
        jj00aae0msgZaIAundiajjvsca4KIscT0GIa20Rs608HIcaPRZ0CuHeGI00uaaa4IV00G8Ho
        E1EGuV00eIdaW7Vo0y@F8999o2_@_Cfa8HI_t901W0y@zf5I6yuJZSGWqsM0900W0ORx8D00
        WjjjLHI00e0qsW77h_AZ64mZmnDBQW4wknj03SQI172UqWG3I86cg04400WW08m@3Y6WhFLA
        u22igGI10900W400Y6W0C000BI_Lx050X008_Af4a00q9W2WC00Y6GXW6gwwc9YdlgjZc8QW
        ZshuWQ080100mZ6AS503nAPLU26KEG2HGu4020W8Y80n00Gx0A4PgK800WK000G0000I00m6
        14W1000300WG00WfEg2800Gq044VbNA002_61Yu46Aw69W000SF11200a2DWfe1e0180m004
        0D00u9vk80084mP1t9e0X00W0De2X00GqQY58u17o5si974Xq4Hgi4W4001O00NMeHm9I140
        0uq05YCMA02G0T2mmoi44yOLMMIIaaaeP999GIIIKmZ68G899eEYs1WWQ0MmmIMYWW4D3991
        8IIoaWaaG999HmIIYiWaaW7vAZC2U2xkm9GQM23w40X80Cug3gwWPXFcJ8sSgYimWW6G8YLl
        0004iqH31FI5wIIoE1EGGIIc4WaaE1EWjaaGq0EXyaa4199Pd05GGoIY4aeKmZUz2W51Fk4W
        10WQ080600DBRRhE1KGVRRNmZEncssEuH2Kss616IIGBRRB009fE180099HmZEP1RRp9899e
        4iDxaWa8LIsw4e0ajjH4ca42Uq9W400T2GW4004f99fGG00aqba88300K2IImZFv2_@FuH2G
        _@VYWaamPz@FRGIIma@@_8F93Uy90100hGG0C00GDjjT0200w4u0BQRBJ5gx00bz5d4JG3HK
        K9j6vRW000YXPhc4A8Ci3oYwWeRegJW3Y6mWK8EOdEfE_xXe1sQOW2UPeWGTEO5262S2A1G0
        0H3KHG3E1a00eJ02sfxW8TE8uHj60eXhoC8Q0nYj0hF1i8ohgwiGXcpBZ000GFYHibQOXmdx
        hH44E1Pn57OG3e51njDcGMm9iTl74BNOGanFr903xDfGmZF919BHIIYYWaaWE180aae4B99e
        uuC8eEdw48ZW7vQbAtYwmicBw8uaI18004S2VnMWMW6h5qGLpcSGu46iWb11Fk4WC40PxRR6
        mE00jjiPB84G0qMcjD40O0Px1F25BNRR8989o5XbP40b8XsoYjGoYaKBPcs99IGYj3Ui9B23
        RE58C15mbPd3b6f6w6jHOIYa3JMs8iGG204yeJ4GWJaaa8e800HIJJAW0409f992G280b4a4
        yuJkCl_h1W08_@d8119yQV_paWa4SjVkFIMoW7V2O02WQARQ2C340CDDP740A0sa6j5A30WQ
        oW7pTkB7MqWWu5nwhoyYAyA0202h3m010GWmRM8uacW010CfZ2T6uG0DC5ek1ta5Mm4Fq8fM
        v8em1d4KUK1G0402SIA4801H3eW1W0W55O8eXb0C00q9G133KGJTD4JsO7NKGq0HT1X3N1mG
        WJPjC03HGqa020WE1A0400mkM8aQh4pMi40110m0101QS0K10WzxARiX4Yl2gH4Lxt6B2GhM
        20007JOmq4I4WcMZ6uGKXPrBCNxSWHaAY533LT2eHqDFH008u5c92Uq94WCaA939x4u09818
        T2G0899hWwaIoIIYaW459981T2G019Hfe1I8unUthrYm9OwDZ2GW00iq1O@SOGm0P4OhonMy
        aiaaaE1Y0BP9PW6H5D04qaaWY6mWu4_gGb3_XeWW7N2028WijjiE1AGxR1006WMjzj30078r
        sMs5yeJijjiXaai8ssMcHIIW4QBRr2190IijPOd48H9sEuncijjkvaWa4sMMcTIIAaQPBm69
        D1IibPOZaCuHew4e0QY00W1aa81900m0IYcaa0001AoIQ21Fwa@xhVGIIHal@bz999JY@_3@
        c449X@V7@HIaW402UifQ0Amq20080iDRO70400sCji500SWossqImZ5lWb7d6ixe1MrOY3T0
        mGfFTjXs21gdR5HPKCmIhnXHWJE100G88ezY9WWuvHh6We2DGYWMH8E1bg@OZ8lcwr2nopm0
        e00030qNi5BrmW4RFYrp05S6c5HgaRy8qTZu2L78Oeeyivn3rdWMW6TH2008w6iw4GX5DI0G
        0GImZDXaaWCEE2aca48999JQIIMd094K7Kj5uGq0408999unfG0010008u5coYAqinQvAua0
        9000icR21FQRd0O4eHKcaaaw4G1agaa098f3q0Xu4kgkd82Ua98M0siij1004GpsMs30048Q
        xRRE040mijzPbjj5yOJA3Ra8B0n6y818BXsibCGY4W0pcsM9IGIcW7X2Oda4GnsMbCJIaaGR
        b2M8HmPcLBBxKmZI110EHQQY00W0499D10002aaWk810O0MIIWK_@@W7RoTw3922IU@lyd89
        1Py@@wnaiW4y@EhBIIsR888uHcWW1rgfj500GWessqE0GO1ORPIx4e0Ms0030CyhZR12028Q
        W8Ql1C010213qb880W53A0GW8002GYvRQ8uaaACW01002W00Go0uW0dM8Q0e0010qQ_4vKAb
        0000G000N3SGv0QzBn10A00o0WWV6CuvW2Yzx9WG01t4cmf5G4TJJHIYHCPFrC05DDKGmZZ5
        77MlJSGmZX5XLP4100MKfWj9A8T03Yn4XEOQQK93sQvWCRr8_AcAePhkPw8qWb0200qUuPzs
        iHG3JTCH51FYRjjgzE11X38HS2DLsI2j2yGm9N1G00Akd52Uy9H8P9IIIK4aW48999J0I0IG
        TP9B99G2IYId068198fJW2GGMI6yOKHtyn589znG1XwC6010mBo8CaNqYoLiOBS2P1hPd05G
        M2IAunkGMmI6Dm5nNXc0000RRRRk0000jjjbre20jjjRSaZQ0q0m0aDRvx0006qizlD00I4W
        ssNc20Q10RBPsORRl9IWKRRR6999IYjj3UyW67@e60DqosAHY0oLRRQ49909jDfiWa4i8sM0
        gHIcW4QRhs299I2ijQRba2Ui0D999gjjjRS4aQ0oW5aLYa04QsKmAI20IPR9PB99CHjjdCZa
        aqW7F03000OIIIa3000e99HI30ar81I6002US60Pm9IQG60Wbm89G970WGWaaW6D0090IIRa
        a@@xV99HIs@VmZ4Gg@@t@Xa49v@@i690P@@VmZpudyb49OPl@JuJaibK_@IzLIo2Y@@Xq391
        8o20Wi6F0ejjTJZ4GjjjL0000usssW7j1m0KhsKM0022eQBPR1004mjj8L00G2escaq088eR
        aZ6mhmmQ8Kmm60ujaPH8e1hwIGXe1yAE1z60efqbO0I00GyLPLY83H3mGG3M5Ld4na1rA7O4
        SVMtn9H0QMzCn32000G1004QmH2800W010W00004000G00WyQ@2H00m5460m00uOhiUJmWLt
        G8s2msDfXM3G8cCbYPdW0RJ0100mzlO50l1H3emfNJyWMKxCeGh18CFW2rgGKGGdSg0F7WKG
        0DY1880ug0D2E9hgTy280GGXAHiFG1Ht0LqQ9G010O0W42Uy998P9T2e009H9IIIGaWai89B
        94K74f1OGmZvC20144ba8119HIoIAun3GIMIoa408EXdGG00488U30irZV74RIM1ejz00FWa
        aaa899PW6JqN18r0OXabaaE1IG22IId05WiiaCDW2OIGI4y862I2GY6uYQ0k8Q058DP9r9m1
        H3KGlA5S7q1NDEHSdPK3W6n9umz8BORRRp100GmZ7msssUiF3O7004yuC011jPVV70WpWcjb
        j10Wn0qsooK00W0ORVpERRxDH2aRRRp899HYjjTmZ0fXfHY40ahsGq8IY02QRPO19PHHijbL
        Zaa09sssi6FmA999oijDRdaa1FI0paa49kjj1FE339h49C8qi5WLaa0cps6oMIIGYQRBH699
        eptGGmZ9WC00eiH22Ui7DSI24b1088C9HJo1046a4fvf1042Ga4caoQq0s@@@_baa8z@@x@I
        IAuH2yIII6yeD_GU9HMMsxVC_5919j@V6VbaWWu@VBzGI6UO01kjjj7UG1kjjj20000rss6y
        eDW2WQrYo200R0KRJJ30WX0kjff200Y0rso4y8LhilHm92dH3Q1NjnnN6rqG3HtWGyL9rDq1
        W000Y6GaW66AM030100qjo1RDZLq09444MJUXGS2CyQ021En4WW8WWxf8E142qOgE9E8sY5w
        7Z901G0L3WGT6H4D0J03W02SQkN1S8q0c010100O8OTn3kWWWrFS8qWac0XW42C8SY6QtXWu
        4WwV6AY60XDGSA3cn_0X04G00a000UIuWq1SeW0eY60iS6G8f33w6XWL8c8GZbw5WWAHz8Io
        fMXPX8MlO78d21ffOO8uQ0D21Pf0QA8_X3M6mWxHG8uHdQBeWR18u803Akm001091F_GyYD4
        yeCIsIIw4W02IGIaaia8B9AH222Ya0aLgT94K76Hu933B990YIIWaWa89P9H6IKY4W4KhU64
        ZvK4W002Qm08500NGyGy8DX020ezJ6M@rgx2c8@W52vLfSAWP7rSQBe011001FgNi5Dr9W1q
        aWa89P9HGMKYa4449F9h0DcYaaa091993JGIH3S0G2IIbaba1FQGS2GX100OlD980900000Y
        044m694W44000008G2IWQ0GX008HD0JGG22e6W881900800YW5400C00Im3200C008e1H004
        e60JG00IK3m44eW0g10Yy9J0qsscj00Wy99W30008RRxmAj100WDxxR00K4qT2G08OWMjii1
        T2OGObCaFf2waaa2hq6jjDIaGaSrcc6HI0GGRB9B89BAgjjiwaa00nssgjJIAVI2iJIIYKRR
        RTW32hC7Mos9IGOePB8x8919bjj6Daaa0vsMIr0GGOb6010008999I10W2A98uH289996MPD
        WWWJaWX80090fJ020919HQQ2eJ02GJ2@dF92_aaaoda0caaaW@@@zJIIsI97r0eXts7Iabby
        _7mFh1W0F9l9IGGuzlzV89199VI6kVW0ijjjA0002hC700GjQPH10010s901WW1siff5002W
        os__o8llD0Wi208060GmOoWAr05gT4hs2OOmB2Y6mWEYG8qWca01049POb5SGq0GicDNF7L0
        WA0Wo1I8aAea0104DW2XYwLrZ54884HwZMD0VjOD3n9qa080W10Em000G5iG4QmInBc0m20W
        MG43X000G20W7D4xmWA2QefmAteoIh67u0G000G2002RXh91JOZplsYCYuHWA4n6YpUk10kQ
        rF72Enfd1g8oug0210KTj6XjmKuUN4MP3HurGObo818BHIIYYajaW8yA01A99I2IIWabaXx5
        Ld064D010aia889Ar902XLIL0DAKUnM2000RqWiBB88q03_y2jkth8Uak2rPXmAZL6IIId07
        G2mIgJW52q0AP9P9IIGKY6eWE1Q8iIg2d0ZW7Xean32Ui6G4Gsijl10GGGps_s20WH0QRRP6
        00JWijb3Ua2gjjj1FcZMq69I0IkQJ3Z2Ua0RABa81Ar2Ua0P8ns1Fw439x49C8qibaTaamco
        s6o6IIHYSRBG699HTQGGmZC1e2EHo2Y00g44998f0022aaaq80089unfyY_GYaiat@Ay9IwI
        2@@e_C9911@@I6yuKW2WQrco20001KRBI700X0ijfhA00c0rscc601jQ5sYWT5fI5jX5sZv4
        LRGXZ6OGiVRbCm1H3iLqQ9ipm1VR5Mq0AKzuNJJaG3054rEK4W00Y6eY88igpY6s0eWI67he
        i2Y6W9W0G0LlfMd0FK5421er5200W2im2500mQSD0O00uDGh_PHZW6MAEX2Y6GX8MDO00g48
        00iOG6XJmqru4yMOPhfO0410W0D4xo236jGYe1WwgdoMBGX4DAOLf4YKff8BQ8Ms4IuZgm9Y
        8ung4G004y8PoooIw4W0oIGIajia811AHII2Y4ma591DXWwWYbaW01H99oIGIaYiaw4uW89B
        866f0404SX8R80402rXj1l8xoB92De90H00X2WHmZnA98Bf602O919HQYIYaWeKmZOD20184
        baO919HGoIAunj6JfWE1k8uHeys000BejLlR10m5WMjbj10mC8rsQs5yuJQJRa2Ua03Oaa02
        Xsi1jGY4XKpsGs9IYKYW7dIaGRBGs992Ogj1FI0MojDDQaa80102Uq903m9I6I40WiW89X85
        002Waaq410WBWIIA3UaAh9@@AwJIaf4@x3_DHIG2l@Xy39f291F_480eMjXj00WI0rs6r10G
        10RRoh200CGjj11F2r00Q7@BQ3086e00W3Nm866b8000082080n8Y68gA180100uu05y8ANH
        NnGq0Vj1a1XJ8HiVG13208s2C22QgB8KOx842USAW000FH9Hq0Ib1I6nAr5C00WW7tQr25W0
        000K00OrYe660110004000G000iYtMt2eGL2E4qmKRWqGIPK4yAHno_Gw094QWIN_HGKkHCT
        YLLWOGk0L4enLBAOGmzbL_BMxVWmb7CK1m1HgC5400WL38e9W82I5gW75hj08c20XW7VIQ4M
        Id04GK2IgJ05G3MI6KdKiaaa2Uq0IGMIT2a0989XOOi2G000400WxhAxkWA2UiBG000hU1Ne
        1ADt01noY0W40WW7VZ00GImZGr9G5881I2UKgE1C8G32OYII2aWaCuHgw4uYUOA8uHc081PN
        301G0QRr_M0041ejJ0242ajPBxiDuHdqos8HIGoLRHRKD04OBOX490fcjjiJaae41F_4BPx4
        9L8qijaTaa6a6y81aucSrMo6HIGI8und040dq901W1aae1f04401i900G2KIYq4_FuHdyp_G
        M301M_JI4i4@xR_DHI02l@b_39f591F_4W0eMjfj00G00rsKs10G90RRJg2004GjjD1FAKyX
        AF00VPd1LVME4r45nDuGyYu4DG71FMGJ@E4yOKT2mm7P3T8W8W000M2WWShHB_gh0101aO07
        1So4W8WW_nUg6WBIqOYGTA8Q0esHOZWWqA303EEeW88s9EW9Yy2XiqEfbAXAF9Xe1sQb6C2Q
        W90201nVOsQa6W100OHI92fghjAbA0jr2USYWxRR4cpIQWWWJOA0d3kVeXOCzAatA2iTg10U
        8uHQGGIIM3W2IGIIgV42eaaWT2qGmZJ51G1T2O0pIIoe1M8E1o6RHd1EYuS26U5OYBVG8SYe
        o6eWmEwgp03Y6uY0DcgEiA2EHiOBifnH2YNy3IIMIaW4bg1W04aba1fALmZDW4ba4B19PmZh
        D0G11F63800WQ08G000CPRRZQ0KmRRR300G0PRRP600G0jjzPB0020qsclT00S0PRMsER3US
        6csssGGII4BRRp8B9f_H8aDIIYbORpo699IIiDRQBa819nijWTYaCa8uHQiijjL301kjj5g1
        81nqssC2IIamssYjJIYaORhas992HYjQ9Ra898ngjZDYa4cGmZx8000GJIIID0A0III0008W
        JIoJ80040991H2008Waa48900IWIIqam@1FEZt@@@Q08W@@@8GIIYQ0KmIIIY@@lVGIIGa@@
        dz99PHY@@b@ca4FX@V3@HIh3GGmZy8jjjf6034800K3W14essCj00W60Rpcs1GD04Gs200AG
        jDJQ1W10_V0WAhFJh0dA8ou7YX1hBpR8QWjY9Rjg1KW000G0Qm5VLP1DaLTcAaI02npFLD0c
        5d0QHGqMN77KOmLPPSnH8DSdoOnMCrX17e000O0WvYAStATheW0NwZ0aeE_hx1qgFPi@EG8S
        Yo2UCpQ001A99RGTCWbiaCeEi8B195Kt1H3O02I0WWWQBs2e_D7Z22kQZg4sf7kmMGBuHCZN
        SaE1S8G3c0919q9m5b@LGS2ArbI640G02UacQ0w0sssMd054y812Wssij10W08RBuHRg1u3W
        aRRr0OGmZ408rsciTIImZsK307Oxaau9qsAjTIYWaQhMm6fr18mp69PG354y8Er0OHd054y8
        1T2a02WIoW7jf60H2UK1I2@@c@Za8C904yOFr0KXf50040ORT2GW0ORxE1CWfj0m00@djuU3
        0i780000300W0000a004qzN7wOGq044eUq1F_VCPZURH11eLxp044WsP8W00600yZJG8U4e3
        Du@0qUyioAAAYlQ0o981CYJOf6JU88e52Enfs2g0G0GImZsKAd6T2K01989IIMI4m4b2g3e2
        2w82FAYJW6G00011LI3Y7inhK1dyVd08rKf41FMCGoIoWKnAGZA2d0jW7TgJWB2USgE1g8uH
        ew4WYW7rgJW82UygE1Sm799PmZKr9051F_@00@73JOlzVHmZ@7yeY1DK6480WW7nh6Ws2klv
        WJ_FUaChktX0q_Fu_D3UqtWJ4FunRg1eZuue8ekrYXPwWJ_FuaDZj0jW7@Fun@3Uy@W7@V0W
        @3ev@W7@FmfkYy2jW7@Fun@33x@G3_FWc@3Uy@W7@Fun@3Ev@W7@Fun@BP42E0001FM6nsss
        W7@Fun@70u@OoIlj013Uy@W7@Fun@3Uy@Wj_lPc@3Uy@W7vb000GmZ@7yu@1dyVm9@7yeXf1
        OGmZDNou11F6M9Z74yu@1F_@00@F0m@1RzVmZ@7yu@1F_Vm9@76s@1ezVmZ@7SYy1F_VCCd6
        So@1F_VW6l5yu@1F_VmZ@F0m@1ezVmM@7yu@1F_VmZ@7So@XXzV0D@7yu@1F_VmZ@7So@1dy
        VmZ@7yu@1F_VmZ@F0m@1ezVmM@7yu@1F_VmZ@7So@1F_V0D@7yu@1F_VmZ@7So@1dyVmZ@7y
        u@1F_VmZ@F0m@1ezVmM@7yu@1F_VmZ@7So@X6yV0D@7yu@1F_VmZ@7So@1dyVmZ@7yu@1F_V
        mZ@F0m@1ezVmZ@7yu@1F_VmZ@7So@X6yV0D@7yu@1F_VmZ@7So@1F_VmZ@7yu@1F_VmZ@F00
        TG00060u@0Q_Fun@3Uy@0q6a000GmZ@lvXbnZOM0De110880j@3ev@W7@FuHK5aae4yu@XWq
        9G00WWJ_FuHFHGII6yuo40WiPRR3040WkaH2400q6yeNQQRZAPa0ORBa099r2UiAqss92IIe
        PORxKo81ORRae99v6yeNIMIIBPa0QII01FMb_@7IaaayU@@FBPy0199y1FM510eMjjj0W000
        r_ss10100RJRRmZMjHL3naPq00@F0GK3qqmUOR14088QWc2Uy@W7@FuH_N2eZW7@F4_@3Du@
        22C9GZk2Uy@W7@FeE44aabKzc2Wa4b2UShWwEB6cDZ5R101001dyVmZ1l611nMO3899fQ0GG
        2IIIi5W0B99f6W5aWaW5Dm5IGIG2quYQ0ieJ032UKZ_4m0G0GGD0ja201VNCH9ZN4yOLbCEH
        mZFLoO51FoL9ZF4y8KbCMHmZJLo861F2r00@F0GedRsMWw@7yu@bAiHBJj4yu@1eLSmZ@76s
        @1ezVmZ@7yOvbCYHmZ@73ZZ1dyVm9R6R1Q1QiMS2b9000Gsssc900WI6R0ijjTmZL9rssU7H
        2msss6y8MqsssCIII2ORRhan3maaay4m11FwbcaaaW7hY@@@V9ZDGaaaian32Uq91000bCgW
        0000ejjjA0000tss6yu@30yV0D@7yu@1FgNaNN5yu@1F_VOO@7Qm@1qyVmZ@7SY7e0002Uy@
        W7@Fua@3Uy@W7tkaH32Ui1E000bCIGmZNn0999hH52UiAdaaa1FgmJ098njjDuni4000KoO2
        1Fo5@@@@I6L8unjAPCXW7@FUn@RBGvW7nc000GmZb5Dm31F_VD0VO0008un@ZW87G000HgyV
        m94sZWWHGWMG3r11008Q0hW00G4yu@1deP9Z4889H9un@32om6jKFunc1IIIMUX61F_VmZVK
        oO31FkL9ZD4yOLbCQ1paaaW7vgaH62UyfI6jmF99PmZFLoO61F_VvUD6yu@1F_VKxp5uaj1F
        _N0Q@7yu@1F_V0Q@7yOV1QSMm9@7yeEnnbHmZRb6W11F_Vm9@7yunC999ZNKie1GBunzAPyW
        W73han32Uy@W7@V0W@70u@0QKEKqfBNgXe1Q8un@3Uy@88sAua@33x@0Q_FE1K3EPQC0001F
        MM2S64y8R1rjLCCJ7So@1FwPi5b5enQ1F_VmZ@7yu@30yV0Q@7ir@30OOGtv6yu@1F_VmZ@7
        Qm@1qyVmZ@7SYcbCcHmZ@7yu@1dyVmZ@7yeTS0002UiCYjjj1F_VmZ@F0m@nabUR126yu@1F
        _VmZ@7yu@1RzVpC@7yu@1FoB100WW7@Fun@3Ev@WJ_FuH3J3mWW7r5200WijjD32001FMcSQ
        RxT49GPRRRmZOPQRRp1999eijjI6F0QIIImZb9D999ungS@@@NoO3C8993UiA8000bCg0400
        0Cjjj1F_VmZ@7yu@1F_VmZ@7yu@5441210WW7@FOBK9000C0GPH3GKF2a4QWN1ebNh7T4yu@
        naXGWjD7y8U1rjLmZGVDIKj5SnHBe5yu@1FEaWaaaWKtAEXoqqqso0000p@@lF999ID9jQp0
        000_@x@@IYaatcjj50000yD1QWjjjjD0Ce9G2g1G3D0004000uV000J200OB00W4000aF000
        Z000O0000Y4999Mj190aaa4Waaqr578IIIYGIIID07Waaa4aaaKD0W0m800001G@39000WC9
        W440000400O002WaaaK4H3zYemmY6K3G88000h1GX62EO003qsssoIosc3999A1000jjjQpb
        bPRMIYay0000tcjjbMjjj8III20000ORRR3RRRhWaaaz08e60Dq000m600WB100C00Wu48WB
        00Wa00WD08GIIIYRR99EjjjwijjPtaa89poYaORhssRRssUIaaa87lq0jjjDaaaaGIII2QRR
        pIRRhMIIoQ0mG200W9000k500mi000c0008J000P300mQWW6A08999G44W10E0IIIY091WX4
        Ke_05QfqWQ001Wa0GNFHS302zCK00999I0000Wa4s1e0999P11eGD064om4r0GHZ46K302BP
        MGd07eccscJIIIR3709fjLWaa4X0000200vJIGh4AWjjjLaaaKu47K3W6g999n400SAn1OJI
        I49000089H2QRhsmsMjT99IIi@z@@sgjjZLRRRYaaaG@@@FssssWjjjPIIIYm@@lVijDRJRR
        tFG0Y@@@Q0smcaa4iaa4LIII4@IIai99HoQ9HIca499_499XsijjsijjPpssstsssERRRRTR
        RRUjjjPijjPxjjj6024jjjDy01ijjjXjjjPssscnsscDsssQ0mmcaaasssMRJIIaRRRrk99H
        oijLR@c499sMjj701rLT4He5yu@1F_VmZQ7en@1QyVW6@7en@1Qqtr1DiYG21QyVD05_YL1L
        7WGW265mvV8999XQII688RH3iL0D@7GprtWkm_XA4enY1SEcWaa4898Ar0S089H1I2IGH3e0
        a44aE1I02I2Id090IIIAQ04aWaa01999G3J0110qhG52808cOWXQ0O8516EQeX66me3H240G
        0W00002080002001040011g18A;
    INTEGER CHECKSUM =8322;
ENDDATA;


PROCEDURE DO_EXIT USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $81;
    WAIT IDLE, 250 USEC;
    IRSCAN 8, $81, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==0) ) THEN GOTO Label_0;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $07;
    WAIT IDLE, 1 CYCLES;
    WAIT IDLE, 200 USEC;
    Label_0:
    IRSCAN 8, $ff;
    WAIT IDLE, 200 USEC;
    WAIT RESET, 3 CYCLES;
    EXIT STATUS;
ENDPROC;

PROCEDURE DO_READ_SECURITY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a4;
    WAIT IDLE, 3 CYCLES;
    DRSCAN 44, $00000000000, CAPTURE SECREG[];
    ULUWE = SECREG[ULUWE_BITLOCATION];
    ULARE = SECREG[ULARE_BITLOCATION];
    ULUPC = SECREG[ULUPC_BITLOCATION];
    ULUFE = SECREG[ULUFE_BITLOCATION];
    ULUFP = SECREG[ULUFP_BITLOCATION];
    ULUFJ = SECREG[ULUFJ_BITLOCATION];
    ULFLR = SECREG[ULFLR_BITLOCATION];
    ULULR = SECREG[ULULR_BITLOCATION];
    ULAWE = SECREG[ULAWE_BITLOCATION];
    ULARD = SECREG[ULARD_BITLOCATION];
    ULOPT[1] = SECREG[ULOPT1_BITLOCATION];
    ULOPT[0] = SECREG[ULOPT0_BITLOCATION];
ENDPROC;

PROCEDURE DO_OUTPUT_SECURITY USES GV;
    PRINT "Security Settings :";
    IF ( ! (ULUFP==1) ) THEN GOTO Label_1;
    PRINT "FlashROM Write/Erase protected by pass key.";
    Label_1:
    IF ( ! (ULUFJ==1) ) THEN GOTO Label_2;
    PRINT "FlashROM Read protected by pass key.";
    Label_2:
    IF ( ! (ULAWE==1) ) THEN GOTO Label_3;
    PRINT "Array Write/Erase protected by pass key.";
    Label_3:
    IF ( ! (ULARD==1) ) THEN GOTO Label_4;
    PRINT "Array Verify protected by pass key.";
    Label_4:
    IF ( ! (ULUFE==1) ) THEN GOTO Label_5;
    PRINT "Encrypted FlashROM Programming Enabled.";
    Label_5:
    IF ( ! (ULARE==1) ) THEN GOTO Label_6;
    PRINT "Encrypted FPGA Array Programming Enabled.";
    Label_6:
    PRINT "=========================================";
ENDPROC;

PROCEDURE DO_QUERY_SECURITY USES DO_READ_SECURITY,DO_OUTPUT_SECURITY;
    CALL DO_READ_SECURITY;
    CALL DO_OUTPUT_SECURITY;
ENDPROC;

PROCEDURE READ_UROW USES BITSTREAM,GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE UROW[];
    SUROWALGOVERSION[6..0] = $00;
    IF ( ! ( (UROW[5]==0)&&(UROW[0]==1)) ) THEN GOTO Label_7;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    Label_7:
    IF ( ! ( (UROW[5]==1)&&(UROW[0]==0)) ) THEN GOTO Label_8;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    SUROWALGOVERSION[6] = 1;
    Label_8:
    SUROWCHECKSUM[15..0] = UROW[127..112];
    SUROWCYCLECOUNT = INT(UROW[111..102]);
    SUROWDESIGNNAME[69..0] = UROW[101..32];
    SUROWPROGMETHOD[2..0] = UROW[31..29];
    SUROWALGOVERSION[3..0] = UROW[28..25];
    SUROW_PKG_TYPE[5..0] = UROW[22..17];
    SUROW_SW_VERSION[6..0] = UROW[16..10];
    SUROWPROGRAMSW[3..0] = UROW[9..6];
    SUROW_SRAM_DISTURB[0] = UROW[4];
    SUROW_SPEED_GRADE[2..0] = UROW[3..1];
    ACT_UROW_CYCLE_COUNT = SUROWCYCLECOUNT;
ENDPROC;

PROCEDURE FIX_INT_ARRAYS USES GV;
    IF ( ! (HEX[0]!=48) ) THEN GOTO Label_9;
    FOR I = 0 TO 7;
        TEMP = HEX[I];
        HEX[I] = HEX[(15-I)];
        HEX[(15-I)] = TEMP;
    NEXT I;
    Label_9:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISP_CHKSUM_DESIGN USES GV,FIX_INT_ARRAYS;
    CALL FIX_INT_ARRAYS;
    IF ( ! (INT(SUROWCHECKSUM[15..0])==65535) ) THEN GOTO Label_10;
    PRINT "CHECKSUM: ";
    Label_10:
    IF ( ! (INT(SUROWCHECKSUM[15..0])!=65535) ) THEN GOTO Label_11;
    PRINT "CHECKSUM: ",CHR$(HEX[INT(SUROWCHECKSUM[15..12])]),CHR$(HEX[INT(SUROWCHECKSUM[11..8])])
        ,CHR$(HEX[INT(SUROWCHECKSUM[7..4])]),CHR$(HEX[INT(SUROWCHECKSUM[3..0])]);
    Label_11:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])==2147483647)&&(INT(SUROWDESIGNNAME[31..61])==2147483647))&&(INT(SUROWDESIGNNAME[62..69])==255)) ) THEN GOTO Label_12;
    PRINT "Design Name: ";
    Label_12:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])!=2147483647)||(INT(SUROWDESIGNNAME[31..61])!=2147483647))||(INT(SUROWDESIGNNAME[62..69])!=255)) ) THEN GOTO Label_13;
    PRINT "Design Name: ",CHR$(INT(SUROWDESIGNNAME[63..69])),CHR$(INT(SUROWDESIGNNAME[56..62]))
        ,CHR$(INT(SUROWDESIGNNAME[49..55])),CHR$(INT(SUROWDESIGNNAME[42..48])),CHR$(INT(SUROWDESIGNNAME[35..41]))
        ,CHR$(INT(SUROWDESIGNNAME[28..34])),CHR$(INT(SUROWDESIGNNAME[21..27])),CHR$(INT(SUROWDESIGNNAME[14..20]))
        ,CHR$(INT(SUROWDESIGNNAME[7..13])),CHR$(INT(SUROWDESIGNNAME[0..6]));
    Label_13:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISPLAY_UROW USES BITSTREAM,CONSTBLOCK,GV,DISP_CHKSUM_DESIGN;
    EXPORT "USER_ROW", UROW[127..0];
    PRINT "User information: ";
    CALL DISP_CHKSUM_DESIGN;
    IF ( ! (FLAGDISPLAYCYC==1) ) THEN GOTO Label_14;
    PRINT "CYCLE COUNT: ",SUROWCYCLECOUNT;
    Label_14:
    INTEGER TMPINT =INT(SUROWPROGMETHOD[]);
    INTEGER TMPINT2 =0;
    INTEGER TMPINT3 =0;
    INTEGER TMPINT4 =0;
    INTEGER TMPINT5 =0;
    IF ( ! (TMPINT==IEEE1532) ) THEN GOTO Label_15;
    PRINT "Programming Method: IEEE1532";
    Label_15:
    IF ( ! (TMPINT==STAPL) ) THEN GOTO Label_16;
    PRINT "Programming Method: STAPL";
    Label_16:
    IF ( ! (TMPINT==DIRECTC) ) THEN GOTO Label_17;
    PRINT "Programming Method: DirectC";
    Label_17:
    IF ( ! (TMPINT==PDB) ) THEN GOTO Label_18;
    PRINT "Programming Method: PDB";
    Label_18:
    IF ( ! (TMPINT==SVF) ) THEN GOTO Label_19;
    PRINT "Programming Method: SVF";
    Label_19:
    PRINT "Algorithm Version: ",INT(SUROWALGOVERSION[6..0]);
    TMPINT = INT(SUROW_SPEED_GRADE[]);
    IF ( ! (TMPINT==GRADE_UNSPEC) ) THEN GOTO Label_20;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_20:
    IF ( ! (TMPINT==GRADE_1) ) THEN GOTO Label_21;
    PRINT "Device Speed Grade: -1";
    Label_21:
    IF ( ! (TMPINT==GRADE_2) ) THEN GOTO Label_22;
    PRINT "Device Speed Grade: -2";
    Label_22:
    IF ( ! (TMPINT==GRADE_3) ) THEN GOTO Label_23;
    PRINT "Device Speed Grade: -3";
    Label_23:
    IF ( ! (TMPINT==GRADE_F) ) THEN GOTO Label_24;
    PRINT "Device Speed Grade: -F";
    Label_24:
    IF ( ! (TMPINT==GRADE_STD) ) THEN GOTO Label_25;
    PRINT "Device Speed Grade: STD";
    Label_25:
    IF ( ! (TMPINT==GRADE_4) ) THEN GOTO Label_26;
    PRINT "Device Speed Grade: -4";
    Label_26:
    IF ( ! (TMPINT==GRADE_UNDEF) ) THEN GOTO Label_27;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_27:
    TMPINT = INT(SUROWPROGRAMSW[]);
    IF ( ! (TMPINT==FP) ) THEN GOTO Label_28;
    PRINT "Programmer: FlashPro";
    Label_28:
    IF ( ! (TMPINT==FPLITE) ) THEN GOTO Label_29;
    PRINT "Programmer: FlashPro Lite";
    Label_29:
    IF ( ! (TMPINT==FP3) ) THEN GOTO Label_30;
    PRINT "Programmer: FlashPro3";
    Label_30:
    IF ( ! (TMPINT==FP4) ) THEN GOTO Label_31;
    PRINT "Programmer: FlashPro4";
    Label_31:
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_32;
    PRINT "Programmer: Sculptor WIN";
    Label_32:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_33;
    PRINT "Programmer: BP Programmer";
    Label_33:
    IF ( ! (TMPINT==DIRECTCP) ) THEN GOTO Label_34;
    PRINT "Programmer: DirectC";
    Label_34:
    IF ( ! (TMPINT==STP) ) THEN GOTO Label_35;
    PRINT "Programmer: Actel JAM Player";
    Label_35:
    IF ( ! ( ( ( (TMPINT==FP)||(TMPINT==FPLITE))||(TMPINT==FP3))||(TMPINT==FP4)) ) THEN GOTO Label_51;
    TMPINT2 = INT(SUROW_SW_VERSION[]);
    IF ( ! (TMPINT2==FP33) ) THEN GOTO Label_36;
    PRINT "Software: FlashPro v3.3";
    Label_36:
    IF ( ! (TMPINT2==FP34) ) THEN GOTO Label_37;
    PRINT "Software: FlashPro v3.4";
    Label_37:
    IF ( ! (TMPINT2==FP40) ) THEN GOTO Label_38;
    PRINT "Software: FlashPro v4.0";
    Label_38:
    IF ( ! (TMPINT2==FP41) ) THEN GOTO Label_39;
    PRINT "Software: FlashPro v4.1";
    Label_39:
    IF ( ! (TMPINT2==FP42) ) THEN GOTO Label_40;
    PRINT "Software: FlashPro v4.2";
    Label_40:
    IF ( ! (TMPINT2==FP50) ) THEN GOTO Label_41;
    PRINT "Software: FlashPro v5.0";
    Label_41:
    IF ( ! (TMPINT2==FP51) ) THEN GOTO Label_42;
    PRINT "Software: FlashPro v5.1";
    Label_42:
    IF ( ! (TMPINT2==FP60) ) THEN GOTO Label_43;
    PRINT "Software: FlashPro v6.0";
    Label_43:
    IF ( ! (TMPINT2==FP61) ) THEN GOTO Label_44;
    PRINT "Software: FlashPro v6.1";
    Label_44:
    IF ( ! (TMPINT2==FP62) ) THEN GOTO Label_45;
    PRINT "Software: FlashPro v6.2";
    Label_45:
    IF ( ! (TMPINT2==FP84) ) THEN GOTO Label_46;
    PRINT "Software: FlashPro v8.4";
    Label_46:
    IF ( ! (TMPINT2==FP85) ) THEN GOTO Label_47;
    PRINT "Software: FlashPro v8.5";
    Label_47:
    IF ( ! (TMPINT2==FP86) ) THEN GOTO Label_48;
    PRINT "Software: FlashPro v8.6";
    Label_48:
    IF ( ! (TMPINT2==FP90) ) THEN GOTO Label_49;
    PRINT "Software: FlashPro v9.0";
    Label_49:
    IF ( ! (TMPINT2==FP91) ) THEN GOTO NOT_FP91;
    PRINT "Software: FlashPro v9.1";
    NOT_FP91:
    IF ( ! (TMPINT2==FP100) ) THEN GOTO NOT_FP100;
    PRINT "Software: FlashPro v10.0";
    NOT_FP100:
    IF ( ! (TMPINT2==FP_11) ) THEN GOTO NOT_FP_11;
    PRINT "Software: FlashPro v11.0";
    NOT_FP_11:
    IF ( ! (TMPINT2==FP_11_1) ) THEN GOTO NOT_FP_11_1;
    PRINT "Software: FlashPro v11.1";
    NOT_FP_11_1:
    IF ( ! (TMPINT2==UNKNOWN) ) THEN GOTO Label_50;
    PRINT "Software: FlashPro vX.X";
    Label_50:
    LABEL_SEPARATOR = 0;
    Label_51:
    IF ( ! ( (TMPINT==SCULPTW)||(TMPINT==BPW)) ) THEN GOTO Label_55;
    TMPINT3 = (INT(SUROW_SW_VERSION[6..5])+SCULPTORMAJORBASE);
    TMPINT4 = (INT(SUROW_SW_VERSION[4..1])+SCULPTORMINORBASE);
    TMPINT5 = 0;
    IF ( ! (SUROW_SW_VERSION[0]==1) ) THEN GOTO Label_52;
    TMPINT5 = 1;
    Label_52:
    INTEGER CURRPGM =INT(ACT_UROW_PROGRAM_SW[3..0]);
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_53;
    IF ( ! ( (CURRPGM==FP3)||(CURRPGM==FP4)) ) THEN GOTO NOT_FP3_FP4;
    PRINT "NOTE: The Sculptor Windows version number below should be converted to HEX.";
    NOT_FP3_FP4:
    PRINT "Software: Sculptor Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_53:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_54;
    IF ( ! ( (CURRPGM==FP3)||(CURRPGM==FP4)) ) THEN GOTO NOT_FP3_FP4_BPW;
    PRINT "NOTE: The BP Windows version number below should be converted to HEX.";
    NOT_FP3_FP4_BPW:
    PRINT "Software: BP Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_54:
    LABEL_SEPARATOR = 0;
    Label_55:
    PRINT "=========================================";
ENDPROC;

PROCEDURE READ_F_ROW USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $f9;
    DRSCAN 3, FADDR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $bf;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[];
ENDPROC;

PROCEDURE DO_DEVICE_INFO USES GV,READ_UROW,DISPLAY_UROW,READ_F_ROW;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0e;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE BUFF32[];
    EXPORT "SILSIG", BUFF32[];
    IRSCAN 8, $84, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==1) ) THEN GOTO CORE_NOT_ENABLED;
    PRINT "FPGA Array is programmed and enabled.";
    CORE_NOT_ENABLED:
    IF ( ! (BUFF128[2]==0) ) THEN GOTO CORE_ENABLED;
    PRINT "FPGA Array is not enabled.";
    CORE_ENABLED:
    CALL READ_UROW;
    CALL DISPLAY_UROW;
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    PRINT "=========================================";
ENDPROC;

PROCEDURE INIT_AES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $dd;
    DRSCAN 128, $00000000000000000000000000000000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
ENDPROC;

PROCEDURE DO_VERIFY_DEVICE_INFO USES GV,BITSTREAM,DO_EXIT,DO_READ_SECURITY,READ_UROW
    ,DISP_CHKSUM_DESIGN;
    CALL READ_UROW;
    CALL DISP_CHKSUM_DESIGN;
    CALL DO_READ_SECURITY;
    BUFF32[31..0] = BOOL(CHECKSUM);
    UROW[127..112] = BUFF32[15..0];
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],$ffff003fffffffffffffffff00000000
        ,PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_CMP_OK;
    STATUS = -43;
    PRINT "Failed to verify design information.";
    UNIQUEEXITCODE = 32772;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_CMP_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_IDCODE_ONLY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[];
    EXPORT "IDCODE", ID[];
ENDPROC;

PROCEDURE VERIFY_RLOCK USES GV;
    IRSCAN 8, $84,COMPARE $04,$04,PASS;
ENDPROC;

PROCEDURE DO_VERIFY_PGM_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_PGM_PASS;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32891;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_PGM_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_VERIFY_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_VERIFY_PASS;
    STATUS = 11;
    PRINT "FPGA Array is not enabled.";
    UNIQUEEXITCODE = 32892;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_VERIFY_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE VERIFY_ID_DMK USES GV,DO_EXIT,INIT_AES;
    CALL INIT_AES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0a;
    DRSCAN 128, M7BUFF[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 256 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[],COMPARE $c0000000000000000000000000000000
        ,$c0000000000000000000000000000000,PASS;
    IF ( ! (BUFF128[127]==0) ) THEN GOTO M7VERDONE;
    STATUS = -31;
    PRINT "Failed to verify AES Sec.";
    UNIQUEEXITCODE = 32775;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    M7VERDONE:
    IF ( ! ( (BUFF128[126]==0)||(BM7DEVICE==0)) ) THEN GOTO MXIDOK;
    IF ( ! ( (BUFF128[126]==1)&&(BM7DEVICE==0)) ) THEN GOTO LDETECTM1;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "Target is an M7 device.";
    UNIQUEEXITCODE = 32776;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    LDETECTM1:
    IF ( ! (BUFF128[126]==0) ) THEN GOTO Label_58;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0a;
    DRSCAN 128, M1BUFF[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 256 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[],COMPARE $c0000000000000000000000000000000
        ,$c0000000000000000000000000000000,PASS;
    IF ( ! (BUFF128[127]==0) ) THEN GOTO M1VERDONE;
    STATUS = -31;
    PRINT "Failed to verify AES Sec.";
    UNIQUEEXITCODE = 32777;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    M1VERDONE:
    BOOLEAN BTMPBUFFBIT126 = BUFF128[126];
    IF ( ! ( (BTMPBUFFBIT126==1)&&(BM1DEVICE==0)) ) THEN GOTO REGDEV;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "Target is an M1 device.";
    UNIQUEEXITCODE = 32778;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    REGDEV:
    IF ( ! ( (BTMPBUFFBIT126==0)&&(BM7DEVICE==1)) ) THEN GOTO Label_56;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "The Target is not an M7 Device.";
    UNIQUEEXITCODE = 32781;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_56:
    IF ( ! ( (BTMPBUFFBIT126==0)&&(BM1DEVICE==1)) ) THEN GOTO Label_57;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "The Target is not an M1 Device.";
    UNIQUEEXITCODE = 32782;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_57:
    LABEL_SEPARATOR = 0;
    Label_58:
    LABEL_SEPARATOR = 0;
    MXIDOK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE VERIFY_IDCODE USES GV,PARAMETERS,DO_EXIT,VERIFY_ID_DMK;
    FREQUENCY (FREQ*1000000);
    WAIT RESET, 5 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    DRSCAN 32, $00000000;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[],COMPARE IDCODEVALUE[],IDMASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO IDOK;
    STATUS = 6;
    PRINT "Failed to verify IDCODE";
    UNIQUEEXITCODE = 32797;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    IDOK:
    CALL VERIFY_ID_DMK;
    IDREV = INT(ID[31..28]);
    IDFAB = INT(ID[24..24]);
ENDPROC;

PROCEDURE IS_SECOK USES GV,DO_EXIT;
    IF ( ! (SECKEY_OK==0) ) THEN GOTO SECOK;
    STATUS = -35;
    PRINT "Failed to match pass key.";
    UNIQUEEXITCODE = 32799;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SECOK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_R USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPR;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text verification is prohibited.";
    UNIQUEEXITCODE = 32800;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYEPR:
    IF ( ! (ULARD==1) ) THEN GOTO SKIPRCHK1;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32804;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SKIPRCHK1:
    IF ( ! (ULARD==0) ) THEN GOTO Label_59;
    CHKSEC = 0;
    Label_59:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_W USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULAWE==1) ) THEN GOTO ARRAYWP;
    STATUS = -28;
    PRINT "FPGA Array Write/Erase is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32805;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYWP:
    IF ( ! (ULARD==1) ) THEN GOTO ARRAYRPW;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32806;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYRPW:
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPW;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text programming is prohibited.";
    CALL DO_EXIT;
    ARRAYEPW:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE BP_VER USES GV;
    BOOLEAN PLAYER_VERSION_BOOLEAN[32];
    PLAYER_VERSION_BOOLEAN[31..0] = BOOL(PLAYERVERSIONVARIABLE);
    INTEGER PLAYER_MAJOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[23..16])-SCULPTORMAJORBASE);
    INTEGER PLAYER_MINOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[15..8])-SCULPTORMINORBASE);
    ACT_UROW_SW_VERSION[6..5] = BOOL(PLAYER_MAJOR_VERSION);
    ACT_UROW_SW_VERSION[4..1] = BOOL(PLAYER_MINOR_VERSION);
    ACT_UROW_SW_VERSION[0] = PLAYER_VERSION_BOOLEAN[0];
    ACT_UROW_PROGRAM_SW[3..0] = BOOL(PLAYERVERSIONSWVARIABLE);
ENDPROC;

PROCEDURE POLL_PROGRAM USES GV;
    INTEGER ILOOP_0;
    FOR ILOOP_0 = 16381 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 100 USEC;
        DRSCAN 5, $00,COMPARE $00,$0b,PASS;
        IF PASS THEN ILOOP_0 = 0;
    NEXT ILOOP_0;
ENDPROC;

PROCEDURE SET_PRG_ARRAY USES GV;
    ISPRGARRAY = 1;
ENDPROC;

PROCEDURE DO_INITIALIZE USES GV,DO_EXIT,READ_F_ROW,DO_CHECK_R,DO_CHECK_W,BP_VER;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $7f;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 50 USEC;
    BSR[707..0] = BSRPATTERN[707..0];
    BOOLEAN SHIFT_DATA[708];
    IRSCAN 8, $01;
    DRSCAN 708, BSR[];
    WAIT IDLE, 1 CYCLES;
    DRSCAN 708, SHIFT_DATA[], CAPTURE SAMPLE_DEVICE[];
    FOR I = 0 TO 707;
        IF ( ! (SAMPLEMASK[I]==1) ) THEN GOTO Label_60;
        BSR[I] = SAMPLE_DEVICE[I];
        Label_60:
        LABEL_SEPARATOR = 0;
    NEXT I;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $01;
    DRSCAN 708, BSR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $80;
    DRSCAN 18, $00000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 1875 USEC;
    DRSCAN 18, $00000, CAPTURE ISC_CONFIG_RESULT[],COMPARE $30000,$30000,PASS;
    IF ( ! (PASS==0) ) THEN GOTO CRCOK;
    STATUS = 5;
    PRINT "Failed to enter programming mode.";
    EXPORT "ISC_Config_Result", ISC_CONFIG_RESULT[];
    UNIQUEEXITCODE = 32850;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    CRCOK:
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    IF ( ! (CHKARRAY==1) ) THEN GOTO SKIPCHKARRAY;
    IF ( ! (ARRAYRONLY==0) ) THEN GOTO Label_61;
    CALL DO_CHECK_W;
    Label_61:
    IF ( ! (ARRAYRONLY==1) ) THEN GOTO Label_62;
    CALL DO_CHECK_R;
    Label_62:
    LABEL_SEPARATOR = 0;
    SKIPCHKARRAY:
    IF ( ! (PLAYERVERSIONVARIABLE!=0) ) THEN GOTO Label_63;
    CALL BP_VER;
    Label_63:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_INITIALIZE USES GV,DO_INITIALIZE;
    CHKFROM = 0;
    CHKARRAY = 0;
    CHKNVM = 0;
    CHKSEC = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NW_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NW_INITIALIZE USES DO_INITIALIZE,NW_INITIALIZE_COMMON;
    CALL NW_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NR_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NR_INITIALIZE USES DO_INITIALIZE,NR_INITIALIZE_COMMON;
    CALL NR_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AW_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AR_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE W_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE R_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    FROMRONLY = 0;
    CHKFROM = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE POLL_ERASE USES GV;
    PASS = 0;
    INTEGER ILOOP_1;
    FOR ILOOP_1 = 262141 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 1000 USEC;
        DRSCAN 5, $00,COMPARE $00,$03,PASS;
        IF PASS THEN ILOOP_1 = 0;
    NEXT ILOOP_1;
ENDPROC;

PROCEDURE UFROM_DISTURB USES GV;
    FOR FROMROWNUMBER = NUMBEROFFROMROWS TO 1 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9f;
        DRSCAN 3, BOOL((FROMROWNUMBER-1));
        WAIT IDLE, 1 CYCLES;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9b;
        DRSCAN 128, $ffffffffffffffffffffffffffffffff;
        WAIT IDLE, 5 CYCLES;
        WAIT IDLE, 10000 USEC;
    NEXT FROMROWNUMBER;
ENDPROC;

PROCEDURE PROGRAM_UROW USES GV,BITSTREAM,DO_EXIT,POLL_PROGRAM;
    IF ( ! (ISERASEONLY==0) ) THEN GOTO SKIP_CYC_INCREMENT;
    IF ( ! (ISPRGARRAY==1) ) THEN GOTO NOT_PGM_ARRAY;
    IF ( ! ( ( ( (INT(UROW[31..0])==-1)&&(INT(UROW[63..32])==-1))&&(INT(UROW[95..64])==-1))&&(INT(UROW[127..96])==-1)) ) THEN GOTO NOT_CORRUPTED_CYCLE_COUNT;
    ACT_UROW_CYCLE_COUNT = 0;
    NOT_CORRUPTED_CYCLE_COUNT:
    IF ( ! (ACT_UROW_CYCLE_COUNT<1000) ) THEN GOTO MAX_CYCLE_COUNT;
    ACT_UROW_CYCLE_COUNT = (ACT_UROW_CYCLE_COUNT+1);
    MAX_CYCLE_COUNT:
    LABEL_SEPARATOR = 0;
    NOT_PGM_ARRAY:
    LABEL_SEPARATOR = 0;
    SKIP_CYC_INCREMENT:
    IF ( ! (ISERASEONLY==1) ) THEN GOTO Label_64;
    UROW[] = $ffffffffffffffffffffffffffffffff;
    Label_64:
    IF ( ! ( (ISERASEONLY==0)||(ISRESTOREDESIGN==1)) ) THEN GOTO SKIP_DESIGN_INFO;
    BUFF32[31..0] = BOOL(CHECKSUM);
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_65;
    UROW[127..112] = BUFF32[15..0];
    Label_65:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_66;
    UROW[127..112] = SUROWCHECKSUM[15..0];
    Label_66:
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_67;
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    Label_67:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_68;
    UROW[101..32] = SUROWDESIGNNAME[69..0];
    Label_68:
    LABEL_SEPARATOR = 0;
    SKIP_DESIGN_INFO:
    BUFF32[31..0] = BOOL(ACT_UROW_CYCLE_COUNT);
    UROW[111..102] = BUFF32[9..0];
    UROW[31..29] = ACT_UROW_PROG_METHOD[2..0];
    UROW[28..25] = ACT_UROW_ALGO_VERSION[3..0];
    UROW[16..10] = ACT_UROW_SW_VERSION[6..0];
    UROW[9..6] = ACT_UROW_PROGRAM_SW[3..0];
    UROW[4] = SUROW_SRAM_DISTURB[0];
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==1) ) THEN GOTO Label_69;
    UROW[5] = 1;
    UROW[0] = 0;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_69:
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==0) ) THEN GOTO Label_70;
    UROW[5] = 0;
    UROW[0] = 1;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_70:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a7;
    DRSCAN 128, UROW[];
    WAIT IDLE, 15 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO PROGRAM_OK3;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32853;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    PROGRAM_OK3:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],UROW_MASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_OK;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32854;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE FAIL_ERASE USES GV,DO_EXIT;
    STATUS = 8;
    PRINT "Failed Erase Operation";
    UNIQUEEXITCODE = 32855;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
ENDPROC;

PROCEDURE EXE_ERASE USES BITSTREAM,GV,READ_UROW,POLL_ERASE,PROGRAM_UROW,FAIL_ERASE;
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO SKIPRUROW;
    CALL READ_UROW;
    EXPORT "ACTEL_SLOG_UROW", UROW[];
    SKIPRUROW:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $85;
    DRSCAN 23, COMBERASESELECT[];
    WAIT IDLE, 3 CYCLES;
    CALL POLL_ERASE;
    IF ( ! (PASS==0) ) THEN GOTO ERASEOK;
    CALL FAIL_ERASE;
    ERASEOK:
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO Label_71;
    CALL PROGRAM_UROW;
    Label_71:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_ERASE USES BITSTREAM,GV,EXE_ERASE;
    PRINT "Erase ...";
    COMBERASESELECT[22..0] = $004000;
    COMBERASESELECT[0] = 1;
    CALL EXE_ERASE;
    PRINT "Completed erase";
    IF ( ! (ISPRGARRAY==1) ) THEN GOTO NOT_PGM_ARRAY_ERASE;
    BUFF32[31..0] = BOOL(CHECKSUM);
    EXPORT "CHECKSUM: ", BUFF32[15..0];
    NOT_PGM_ARRAY_ERASE:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY USES GV,EXE_ERASE;
    PRINT "Erase FPGA Array ...";
    COMBERASESELECT[22..0] = $004001;
    CALL EXE_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ONLY USES GV,DO_ERASE;
    ISERASEONLY = 1;
    CALL DO_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY_ONLY USES GV,DO_ERASE_ARRAY;
    ISERASEONLY = 1;
    CALL DO_ERASE_ARRAY;
ENDPROC;

PROCEDURE DO_ERASE_ALL USES GV,UFROM_DISTURB,EXE_ERASE;
    IF ( ! ( (BM7DEVICE==1)||(BM1DEVICE==1)) ) THEN GOTO Label_72;
    PRINT "Erase FPGA Array and FlashROM ...";
    Label_72:
    IF ( ! ( (BM7DEVICE!=1)&&(BM1DEVICE!=1)) ) THEN GOTO Label_73;
    PRINT "Erase FPGA Array, FlashROM and Security Settings ...";
    Label_73:
    COMBERASESELECT[22..0] = $7fc00f;
    ISERASEONLY = 1;
    CALL EXE_ERASE;
    CALL UFROM_DISTURB;
ENDPROC;

PROCEDURE LOAD_ROW_DATA USES BITSTREAM,GV;
    FOR SDTILE = 1 TO NUMBEROFSDTILES;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, DATASTREAM[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT SDTILE;
ENDPROC;

PROCEDURE EXE_PROGRAM USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $83;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_74;
    STATUS = 10;
    PRINT "Failed to program FPGA array at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32856;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_74:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE EXE_VERIFY USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_75;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32857;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_75:
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_76;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32858;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_76:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_77;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32859;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_77:
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_78;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32860;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_78:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_PROGRAM USES GV,LOAD_ROW_DATA,EXE_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Programming FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_0;
    FOR IREPEAT_0 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_PROGRAM;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_79;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_PGM_A:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_PGM_A:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_79:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_0;
ENDPROC;

PROCEDURE DO_VERIFY USES GV,LOAD_ROW_DATA,EXE_VERIFY;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Verifying FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_1;
    FOR IREPEAT_1 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_VERIFY;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_80;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_VER_ARRAY:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_VER_ARRAY:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_80:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_1;
    PRINT "        Verifying FPGA Array -- pass";
ENDPROC;

PROCEDURE DO_VERIFY_BOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 0;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_VERIFY_EOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 1;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_PROGRAM_RLOCK USES GV,DO_EXIT,POLL_PROGRAM;
    DATAINDEX = 0;
    INTEGER IREPEAT_2;
    FOR IREPEAT_2 = NUMBEROFSDTILES - 1 TO 0 STEP -1;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, RLOCK[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT IREPEAT_2;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8c;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_81;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32862;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_81:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_READ_IDCODE USES READ_IDCODE_ONLY;
    WAIT RESET, 5 CYCLES;
    CALL READ_IDCODE_ONLY;
    EXIT 0;
ENDPROC;


CRC 7B84;
