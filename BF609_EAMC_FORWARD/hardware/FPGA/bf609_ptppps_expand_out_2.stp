NOTE "CREATOR" "Designer Version: 11.2.0.26";
NOTE "CAPTURE" "11.2.0.26";
NOTE "DEVICE" "A3P250";
NOTE "PACKAGE" "A3P250-vq100";
NOTE "DATE" "2014/08/11";
NOTE "TIME" "10:08:47";
NOTE "STAPL_VERSION" "JESD71";
NOTE "VENDOR" "Microsemi Corporation";
NOTE "IDCODE" "03A141CF";
NOTE "IDMASK" "06FFFFFF";
NOTE "DESIGN" "test0";
NOTE "DESIGN_DIRECTORY" "E:\xl\project\FPGA\libero11.2\PT_TO_FT3_1\designer\impl1\";
NOTE "CHECKSUM" "554D";
NOTE "SECURITY" "Disable";
NOTE "ALG_VERSION" "20";
NOTE "MAP_VERSION" "1";
NOTE "TOOL_VERSION" "1";
NOTE "MAX_FREQ" "10000000";
NOTE "SILSIG" "00000000";
NOTE "SPEED_GRAD" "-2";
NOTE "TEMP_GRAD" "COM";
NOTE "PLAYER_VERSION_VARIABLE" "PLAYERVERSIONVARIABLE";
NOTE "PLAYER_VERSION_SW_VARIABLE" "PLAYERVERSIONSWVARIABLE";

ACTION PROGRAM = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       W_INITIALIZE,
       DO_ERASE,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION PROGRAM_ARRAY = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       AW_INITIALIZE,
       DO_ERASE_ARRAY,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION ERASE_ARRAY = 
       VERIFY_IDCODE,
       AW_INITIALIZE,
       DO_ERASE_ARRAY_ONLY,
       DO_EXIT;
ACTION ERASE = 
       VERIFY_IDCODE,
       W_INITIALIZE,
       DO_ERASE_ONLY,
       DO_EXIT;
ACTION ERASE_ALL = 
       VERIFY_IDCODE,
       INITIALIZE,
       DO_ERASE_ALL,
       DO_EXIT;
ACTION VERIFY = 
       VERIFY_IDCODE,
       R_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION VERIFY_ARRAY = 
       VERIFY_IDCODE,
       AR_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION READ_IDCODE = 
       DO_READ_IDCODE;
ACTION VERIFY_DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_VERIFY_DEVICE_INFO,
       DO_EXIT;
ACTION DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_DEVICE_INFO,
       DO_QUERY_SECURITY,
       DO_EXIT;



DATA CONSTBLOCK;
    INTEGER IEEE1532=0;
    INTEGER STAPL=1;
    INTEGER DIRECTC=2;
    INTEGER PDB=3;
    INTEGER SVF=4;
    INTEGER FP=0;
    INTEGER FPLITE=1;
    INTEGER FP3=2;
    INTEGER SCULPTW=3;
    INTEGER BPW=4;
    INTEGER DIRECTCP=5;
    INTEGER STP=6;
    INTEGER FP4=7;
    INTEGER FP33=0;
    INTEGER FP34=1;
    INTEGER FP40=2;
    INTEGER FP41=3;
    INTEGER FP42=4;
    INTEGER FP50=5;
    INTEGER FP51=6;
    INTEGER FP60=7;
    INTEGER FP61=8;
    INTEGER FP62=9;
    INTEGER FP84=11;
    INTEGER FP85=12;
    INTEGER FP86=13;
    INTEGER FP90=14;
    INTEGER FP91=15;
    INTEGER FP100=16;
    INTEGER FP_11=19;
    INTEGER FP_11_1=20;
    INTEGER UNKNOWN=127;
    INTEGER UNSPECIFIED=0;
    INTEGER QN132=1;
    INTEGER VQ100=2;
    INTEGER TQ144=3;
    INTEGER PQ208=4;
    INTEGER FG144=5;
    INTEGER FG256=6;
    INTEGER FG484=7;
    INTEGER FG676=8;
    INTEGER FG896=9;
    INTEGER QN108=10;
    INTEGER QN180=11;
    INTEGER TQ100=12;
    INTEGER CQ208=13;
    INTEGER FG1152=14;
    INTEGER BG456=15;
    INTEGER UNDEFINED=63;
    INTEGER GRADE_UNSPEC=0;
    INTEGER GRADE_1=1;
    INTEGER GRADE_2=2;
    INTEGER GRADE_3=3;
    INTEGER GRADE_F=4;
    INTEGER GRADE_STD=5;
    INTEGER GRADE_4=6;
    INTEGER GRADE_UNDEF=7;
ENDDATA;

DATA PARAMETERS;
    INTEGER FREQ =4;
ENDDATA;

DATA GV;
    INTEGER ULOPT1_BITLOCATION =11;
    INTEGER ULOPT0_BITLOCATION =10;
    INTEGER ULUWE_BITLOCATION =9;
    INTEGER ULARE_BITLOCATION =8;
    INTEGER ULUPC_BITLOCATION =7;
    INTEGER ULUFE_BITLOCATION =6;
    INTEGER ULUFP_BITLOCATION =5;
    INTEGER ULUFJ_BITLOCATION =4;
    INTEGER ULFLR_BITLOCATION =3;
    INTEGER ULULR_BITLOCATION =2;
    INTEGER ULAWE_BITLOCATION =1;
    INTEGER ULARD_BITLOCATION =0;
    BOOLEAN BUFF128[128];
    BOOLEAN BUFF32[32];
    INTEGER I;
    INTEGER J;
    INTEGER TEMP;
    INTEGER SDNUMBER;
    INTEGER ROWNUMBER;
    INTEGER DATAINDEX =0;
    INTEGER FROMROWNUMBER =1;
    INTEGER AESBLOCK;
    BOOLEAN ID[32];
    BOOLEAN PASS = 1;
    BOOLEAN FADDR[3];
    INTEGER STATUS =0;
    BOOLEAN SILSIG[32] = $00000000;
    BOOLEAN ISC_CONFIG_RESULT[18];
    BOOLEAN VERIFYEOL[2];
    BOOLEAN COMBERASESELECT[23];
    BOOLEAN SECKEY_OK = 1;
    BOOLEAN SECREG[44];
    BOOLEAN ULUWE = 0;
    BOOLEAN ULARE = 0;
    BOOLEAN ULUPC = 0;
    BOOLEAN ULUFE = 0;
    BOOLEAN ULUFP = 0;
    BOOLEAN ULUFJ = 0;
    BOOLEAN ULFLR = 0;
    BOOLEAN ULULR = 0;
    BOOLEAN ULAWE = 0;
    BOOLEAN ULARD = 0;
    BOOLEAN ULOPT[2];
    BOOLEAN SUROWCHECKSUM[16];
    INTEGER SUROWCYCLECOUNT =0;
    INTEGER ACT_UROW_CYCLE_COUNT =0;
    BOOLEAN ACT_UROW_DESIGN_NAME[70] = $01020408117a79cb86;
    BOOLEAN SUROWDESIGNNAME[70];
    BOOLEAN SUROWPROGMETHOD[3];
    BOOLEAN ACT_UROW_ALGO_VERSION[7] = $14;
    BOOLEAN SUROWALGOVERSION[7];
    BOOLEAN SUROW_PKG_TYPE[6];
    BOOLEAN ACT_UROW_SW_VERSION[7];
    BOOLEAN SUROW_SW_VERSION[7];
    INTEGER PLAYERVERSIONVARIABLE =0;
    INTEGER PLAYERVERSIONSWVARIABLE =0;
    INTEGER SCULPTORMAJORBASE =5;
    INTEGER SCULPTORMINORBASE =16;
    BOOLEAN ACT_UROW_PROGRAM_SW[4];
    BOOLEAN SUROWPROGRAMSW[4];
    BOOLEAN SUROW_SPEED_GRADE[3];
    BOOLEAN SUROW_SRAM_DISTURB[1];
    BOOLEAN ISERASEONLY = 0;
    BOOLEAN ISRESTOREDESIGN = 0;
    BOOLEAN FLAGDISPLAYCYC = 1;
    BOOLEAN ISPRGARRAY = 0;
    BOOLEAN BSRPATTERN[708] = $9249249249249249249249249249249249249249249249249
        249249249249249249249249249249249249249249249249249249249249249249249249
        24924924924924924924924924924924924924924924924924924924;
    BOOLEAN SAMPLEMASK[708] = $0000000000000000000000000000000000000000000000000
        000000000000000000000000000000000000000000000000000000000000000000000000
        00000000000000000000000000000000000000000000000000000000;
    BOOLEAN BSR[708];
    BOOLEAN SAMPLE_DEVICE[708];
    BOOLEAN RLOCK[832] = $7fffffcffffffbfffffeffffffbfffffefffffffffffffffffff3f
        ffffcffffff3fffffcffffff3fffffcffffff3fffffdffffff3fffffcffffff3fffffcff
        ffff3fffffcffffff3fffffdffffffffffffffffffffffffffffffffffffffffffffffff
        ffffffffff;
    BOOLEAN ARRAYRONLY = 1;
    BOOLEAN CHKARRAY = 0;
    BOOLEAN FROMRONLY = 1;
    BOOLEAN CHKFROM = 0;
    BOOLEAN CHKNVM = 0;
    BOOLEAN CHKSEC = 1;
    BOOLEAN PERMLOCK = 0;
    INTEGER HEX[16] = 70,69,68,67,66,65,57,56,55,54,53,52,51,50,49,48;
    INTEGER NUMBEROFFROMROWS =8;
    BOOLEAN INITIALIZE_DATA[5] = $00;
    INTEGER SDTILE;
    INTEGER NUMBEROFSDTILES =4;
    INTEGER NUMBEROFMAPROWS =2300;
    INTEGER IDREV;
    INTEGER IDFAB;
    INTEGER BM7DEVICE =0;
    INTEGER BM1DEVICE =0;
    BOOLEAN M1BUFF[128] = $acdd6548ccb488863e291eb18fe95077;
    BOOLEAN M7BUFF[128] = $e137623a2eeee91126015f3f73664945;
    BOOLEAN IDCODEVALUE[32] = $03a141cf;
    BOOLEAN IDMASK[32] = $06ffffff;
    INTEGER SECKEYCHK =0;
    INTEGER DESIGNPKGTYPE =2;
    BOOLEAN ACT_UROW_PROG_METHOD[3] = $1;
    INTEGER LABEL_SEPARATOR =0;
    INTEGER ROWITERATION =100;
    INTEGER PAGEITERATION =100;
    INTEGER PERCENT_UPDATE;
    INTEGER DIFFERENCE;
    INTEGER UNIQUEEXITCODE =0;
ENDDATA;

DATA BITSTREAM;
    BOOLEAN UROW[128];
    BOOLEAN UROW_MASK[128] = $fffffffffffffffffffffffffe01ffc0;
    BOOLEAN DATASTREAM[1913600] = @WPw00000110040W0W000020G000400108002200000Wwc
        qssso0000p@@lF999IjjjQp0000_@x@@IYaatcjj50000y_@@7HIIIORRRR36uXaa49jjTDq
        WD2000y@@EH0vssMj90008@@z@69HIo000049IIICIII2Va00008III0HII2i134999H899f
        67Waaa4aaaKD020Za491aa8900gX7GIIIA0000800m0G0aaaa9mWauWku00000IIIIg1Vqss
        sosssc3999A1000jjjQpjjPRMIYay0000tcjjbMjjj8III20000ORRR3RRRhWaaa3ZWQW3sO
        RRssba897000mskJAGIIIYC000Wbaa8vIIaaJRpsEJYaaD9IIo4999sijjz8999B999fKHWj
        jj19999aaaaGIII2QRRpIIIY4IIoQm6caaausssgZaa4PIIIdW0PRRRsIIIa600So88EH0II
        IYxa1r72IF6WaaaySHGDW50IIIr07AK6KV8O0OGDuWIQ1r02AY4K3QeTDHDu22000r05w4Ae
        ssscJIIIUy0ejjj2aaa84000G00e6GGhK1ijjjYaaa2d7K3w0JIIIkyWQW2qsssWjjjvIIIY
        O@@l@jjDR7RRssaa89X@x@Vsk6KW99992@@@_nssiDjjT@80n@@VD84LIII4@@@zjjjPpQRh
        JW04@@@_GRRrMRRpsijLRxlDRRtMjjTtijjNrss6pssssssscsssMHRRRMQRRrYjjPRijLRp
        sMD01sORRh1ymssscvssMjRRRsCRRrsljL3GWz000040030OK3uK@Z130Br9SX000WQ0D2De
        fjmf1WCZJMB22jOho2q_FGp@1Q_FGp@1Q_FGp@1Q_FG3l8999HIII2baa41999oIIIaeaa89
        89HIMIYa49f6G10999HGIIc1W089992IIIaaaa81IIg6W7T2ce6W6H3UAGZ@3qu@0D_FG3Nh
        4q0GIIIa200YKW0C000W899BpyWS3LOKH3QFyWQ00fJ05G000q9m1x8Um00C0200O0WTw4e1
        8000T2GWaaa430000IIIa3000G99HI0000ma49920r0KW00000999vAGGD06asv1r0qHd0JK
        ou1caaae0000KIIg@02KIII6Q01z8OID0Kq9m5X0O0GIIIK000L1G010000999o000w3uWM9
        88HW4ECuWQ06fJ0AobaWq0A0G99PQ04W899f608w48YQ06fJ0760u@10EjuBR32wl0q_Fmf@
        3Sw@01@FUa@2R1wW6_FE1FD0004So@1rPZIIIouukG999PFSNK3G71F_Vm9@7SYxLK0HI564
        yOl1DWMmZ@7yu@1F_@00@7yu@1F_VmZ@7yu@1F_VmM@tCp@1F_VCC@K3GP40002Uy@W7@Fua
        @3Ev@W7z8s2iYa4jW6MJsssc1000GRRRs20000jjPR3000Gscjj3WQ0G0msscD00WQ08ucG2
        qsssK3m8T241RRRR8999ojjjPaaa8XsscjGIYaKRRss99II2Rh1e0nsssr0e0nssMDIIIr04
        Id0KORRRp9999ejjDxaaa8rssU2u0c999ISRRrM99L301M899HYjjTBm2r0qHd0JK3010000
        SIII210008999I10Wa8F0KIIY410WV6Fuym3Waaaq7f2r0eHd0M8X@@t@GIYaa@V@@99IIY@
        z@@c899Xt@@@ZaaaaQ0ImZaaKD04Waaa4y@@l7IIoQ08fJW6yHII_H01gjjjVSmWx780RRRh
        2000GjjjQ500g1GXX780RRRRR14ORRRf60Jw4eXQ08O0W@70u@Wj_Fun@3Uy@W7@Fun@33x@
        0q_Fun@3Ev@W7@F6cJ3Ev@W7@FGZt2Uy@W7@Fun@70u@0q_FOh@3Uy@W7@Fun@3Ev@mm_FWc
        @3Uy@W7@Fun@3Ev@WJ_Fun@3Uy@W7@Fun@70u@0q_FOh@3Uy@W7@Fun@3Ev@W7@FWc@3Uy@W
        7@Fun@3Ev@WJ_Fun@3Uy@W7@Fun@70u@0q_FOh@3Uy@W7@Fun@3Ev@G3_FWc@3Uy@W7@Fun@
        3Ev@WJ_Fun@3Uy@W7@Fun@70u@0q_Fun@3Uy@W7@Fun@3Ev@G3_FWc@3Uy@W7@Fun@3Ev@W7
        @Fun@3Uy@W7@Fun@70u@0q_Fun@3Uy@W7@Fun@3Uy@G3_FWc@3Uy@WJUa000GmZ@7yu@1dyV
        mZ@7DW7Waai2Uy@W7@Fun@70u@W7@FOh@3Uy@W7@Fun@3Ev@mm_FWc@3Uy@WJc6400GmZ@7y
        u@1dyVmZ@N301Z0OGW6N4yu@1F_VmZ@F0W9010060u@10C2G00m00O1G008Wco08004yu@1F
        _VmZ@7yu@1F_@00H11008qWoY6mYW6qDE1q2Uy@WJYDuHdGGII6yuR2IIo2Uy@W7@FunxJ3m
        WWKhgwW680004yu@1F_VmZ@F0m@1ezVWw@7yu@1F_VmZ@7So@XXLV0D@7yu@1F_VmZZq9G61
        FcLGTJ4yu@1dyVmZd7enM1DWMmZ@7yu@1F_@00@7Gp@1F_VmZ@7yu@1F_@00C12008eXoY60
        Z0q_FWc@100W4yu@1F_Vd09WW489un@3Ev@W7@Fun@3Uy@W7@Fun@70u@W7@Fun@3Uy@W7@F
        un@33x@G3_FWc@3Uy@W7TFeks2Uy@WJ_Fun@3Uy@E1O02GsMmZOPPZaCunlms99r9W1acKRx
        4u0JRaa88102UKAMY00W0aa2UiCl@99T2eWx@8fW7n240scDj3WE1E02GjTmZ@F0WZ400000
        000G00O0Wjw5uZWj_Fun@3UKuuyh80j@h1848G003001800WW7@FU47X0004Ws@1qyVmZ@7y
        u@1F_Vm9@7yu@r0uGQ064yeORiPGS2GzlM11FE5GWssE1GW30WGmZO9ssM_QH2g1e009ssij
        JIaW4R7yuKmssYiJIIXKRRHs89vw06Wm408uHfw4m0IJ2004WaI1eWW7doV@3PD04OxF9H2I
        yl@ytaW7FWqa0GmZIvR100C0sMmZA00escDj0m00@NZ8IPFMLa1N5FI1X6OGmFF43pIX9uGq
        074m72nzCRe1L4yu@1DOpMT84J6Qr005880WAAwB2Yn2U4DW1003005W00W10a8Uaew0fWmm
        QBW45G1004foMH3e0200WmKhutcj2GpsUuehyp52Ef91000RYYHmZwI04086482Uq94aaaT2
        eW4aaaW713a4a498BfE1K8u_2YXPg0GQ86YDYWGfQGS8SYbgEGY4dGBQW52Uy@u5TH9P9PGg
        RHMoIgJ030P9P5yu4n9aK8HI4yuIG000ajj@P00G2q_scjW1G4GRRIsX300ab5yuKGGIG4RP
        Jo819025j5PXW4I96sijJK2U4A3PBREC90XbibOdma4f6sYiHHIa4BQMs81HM204yOJ01G3S
        oI02X5008199IG0G4aaai9X102KU6y8Kkyly199RHUwdqdia49E_FwRII24EyTz71zHG11Fk
        44000rqMo40100OHRpEC041CjDMBm000rqf1Km00p6F554000AR9ge1Y8UHjMLpY4Qa2W1WG
        Z9A4Sm1rzaGmZD52q2H3iLd0BSJc2naL54G0We1G8_CiMCOXD3a8m9d4800q9m3h6iGG3CH0
        08OG3BAPqB8008H3WLe150K00ukd3MASXuu0x8a2Yy2AKG0080042AKC2000800K2FgX8DeY
        020mr8C4EG1X82rE7502200G0WGiaT43IK4810Yywhe1EOn2mYJWWpab8q0fs6WWR6a8unP1
        4004yu3X1XGm9G5tZ4n9S5210W0RZRs242U4AKMIIa4bb891OHYo2AEk32USA4aab8991Z6W
        0191PII2Ie4aa49v1n9irJ7B4@hK34GG4U6a135XJqqc080604Ou4lsIGZWJagK0BY609G00
        0XmZGmZU9P99HIIYYcqa0999HoIII2IDhe1Ce60288PP5D031DaLmZT10WG0_socX1W0GxRx
        s350C8bjRR35W8OMcjiosW7TIBHZ08387jjjH0a04Kqsq04I22QP3fAH9Ooijj1FoabibC7a
        acWGsGC3HYWG9R1M891GoXD9xKae9102Ui9e0a0E8f9XW2m2aWa0X8020IJ2a4W081BDHQA@
        7yeJ_9VOH2Ioe_b_4B9BZZ@cF6aiaWB@8THGIT3111Fk400I0Kscq4202WOORnE40G0Cj5RB
        K0a0brCf10sv_gTSzAOljAmXZt1uI000nwC7qC01@pa520400000O000A6mWU3E8s442UifE
        1Ou3Y7YC6jrUoA@PqYlwA8000T2qm6d80500eK1f8010000W8w692UqhrzK8Q0kYwuXu4K24
        0004O0WL1KG000O0QMDCm1A0G0Ev5ir2EuYW5MbaAW800L9mGL8QrY9100W00O00q_XN202W
        00W0G200OpY3UoiWuMUOQWY0110KdG1LTSmZFX18808U_oQx1XiEM8WcP3wGZ8L6hwWf4001
        W020ec1680084SYM3AOmY27W0018undiaaa899HHoIIWaaiC989B1rbbbai4098AH3G089B1
        2oWIaaWWw4eWw488EXb040440T1G2002qGX2Rfg_13YWmXm9c2G00IK7b5DW1LXWMGg70404
        Cu4p6WWXOBUIMIIId0L4e1KoJJIaaaeg999GGIIccaa4A9192III3UqgWWCOAg92Ua9WYH_k
        jb1HWWGxsoo2tWa0APRV61WWWajlTdjj5y8JiifWX0409dqoYH0oA52PBw2I80IbjHH75888
        sEuHdO1T7YvCXYidi3aaaK2m0qG020a9Pen8919u422US9e1a0E09fXK2234aqaf8104IxIc
        440C3g9X22@7yeJ_8SuLI2o0yC_K911XG_cU6W4aWP@8y9JMg4008uHc02W2W2qaa00080PR
        QqXDeAW9jTPH08Geqcji0m00@V9fBtBMmrzML6OPW02067HXC08W002mTBC43ZKR9Gmq044D
        mM2W00w5eWO6iQPB9W000irVNLGa080000100V0Km2044VbJ21W0w4WWA388Q032uij9D88c
        iiMku00X011e1sE87qdG2n9WKN66qzW6HjtK0d588000800Gy06Sz8LG0W0W700KBR1n9GGt
        9R9080O7J26EOXC0K8kKfC400yLPNBJaG@T6qox1XyELd084D03be55G00WTEAOCZ2_I0X9i
        M8SWa6XY04G000209YMRiE1IOU43gIzgYmM080GW000W0VA8uafIZYWY4QOq05YJG950010W
        01ARvXWJi2840mJBEqD011Fw4IIGIbaWaT2O0YQIG5eaar0GWbaaaWwUQ403w4e0GIMGai4r
        09811IGsYaW4GS2Jb1_1@FO0200Wi08uu4fMPuWiNTu645wd19808WJZW0800002W00010cw
        Ggu2QulM9YbDje1Q2G40mmH946H2nMu4UIIIaaaWGP99x4W0P9991FY5MIIoe1I0OP99GKII
        444a89B934iWW6igMB6wJmWW7N24nK0ibzD301AWss@ib08B0QVJs6WeEWiD9Rdj1Fs4HPIR
        8G90ojjeP4W48Xs6Wi0G0bKR82s90s0Yj3Uq9M2sDI0He831x81a85aaWDWW64PIsGCIQ0oQ
        aWW7N211EXJQ2I840b0994HAW02WaWcD118AWIQscm@1FsaPT3TG2oIabzXyf9JHYskXzci0
        0XPEY_H30Y402Ui944018Tje90WY0ms2aT20f2OBJqM0aO1gTHQB0qJ7M7urLvT8SeI1n_z5
        4W0WOoIuxn7sXnA00200280YYwgb18OM02m0G2W000OL@3QR9XWJW2W0G0W4000208000088
        004DGL020Y0W00KC01Z9Omcn6ai5NH3aGJTMX0000a00I5050204OjX2oq7XOpX2a00oir74
        Dm2HtK5802WI3EeNUgUma060000040MLgXT3A8Q0c0200K3051F6r1164NQ18000cYwX88M2
        WG0Gd04W201urY2EKWWH3CeIz8cb5e12A040002a000240G8e0UDmWe7l2W000920WBUH0W0
        0Gq074SYKdmB6YG000800r5OGC340G208qWgIzZWt7G8Q020C104qGLXwOmQFM4yeIDPiH44
        J9000vSwr400GC_831F_q2840200vow2YJehu5BW008GWjS5SY1XKvmU254yuJMooIaaWeG8
        58GIIIcWaW4A999283Maba401IIAeEcGoIMYa044AB982AIoE18W2GIYWaa5P995VQGGmZIz
        x94DN4s9YG41EKG001wvOiW5q8qWboqXWWJIBq09YjufE1IGJIIMd04GGI2As222U4g50802
        IYID07GGIKg602mIMI2a408eXhonyW88O8unbW00F8RxBp0GKjelzLPP86KWsMyjP4268PJU
        tPRmZDHMs062IYWSBJ1698GK8iXHB0a185MYXS6Y5bOxW7RoGc2cBQGOG928q1500g4q8OmW
        44P2kbCoOKm001Fs402G2taWcG21u12IGnKaWG199DG222e5raC4X@3Ui9tw7u0aiW8RvAmp
        IM44XSEuD91M3pwEq3a0J904yOJO82BGQQJI0CfKWCb1wG408mqc4j8A0IKUY0L0O00zAWSf
        Z7pAt65kdXXJuPu5cdsgyhZ1I0188G90AO0088u4d_5d00W01L0G0540epwQ8QWcQxWWE1I0
        GG2GiXc4DmDn9O0040ee1I8MnRQWe3GH0GlJKmF35yYd1nATGWJK44W1H48Z00824041@MeG
        4HQr901hAPHCPFTYQ34440Ix8Xe1Q229000000I100J1W0G0Wmu4cAWW2w4eW938uLB72Ua9
        10G4000YwO910H00noU50010304020W0sMiWC198FLBY6OeDKDenW2041442VLT2e0108Wz4
        AOgIhG800SbG1W004cPm0Y0080W20YFvWmMMg1W3Y68X4580100Gq08Kr3Q1DeqJ744w61tq
        rGanPTOH3nzFnNO8DCG1V3amd174foJJDuW800WOOiI040mE74yCW13dqGanJj4m2zCSGmZJ
        80999uHSW2IWYqaa5A8HHd048H9DXIGIY0aa4O9991F_4MIIM5aa4G99BHGG2Yiab49A1Pd0
        6yTH11FELF360900ecghW080C0G2824000eWqFX3XY2b000Wo1Ie862Medgq2u8u4eU2oWBl
        E8Ua52UChIiK8unhaaqWq903H3y4QIQIaa4aG8f9HGIIWicaa9299G2IJaaba801025jgOKR
        0G0Wmi558RRRpW00GmZ51g02Gsotc1k83GFRhsoWO80jlORhG0OGwczipst4BGEjjzRY4eij
        jDuHVO8RQ31A1Gce9CZ8488acoe5Om0aAHpoE2GWGCDRRx0999K1Fc0qaaaW7tHAcIcRGOIG
        1A9s509OAaC8RWY09PIc4C0wW6A8un6acaa4yuE0900yI3I2f6W1eS95IHE24a4r89O8W2KP
        Ym4kFun7OGII6yuEEqFz19OfHMmLs7Xa892nPmRo2c44nTv72H6IG8uH6W000WfjjDunT0K4
        0eqKqc8J010mx3q90C0WDCvRH20Cemb5j0mXZV5chOV8Ms4E9asH1RUPLiQCyc0M93GmgDDG
        204uu02YNyfz7CeJW2g2x0I040H3Grqy40224Of1301000800QPwgY6WWu4IOId2Y6WgI18e
        1Y3YMhWzVFenH52Swee18GW00Gd084Dm3HGu4G00YE1AeDG9Y9hgTBQuk37Y6We9@A0W0WmK
        0BCS1112gLf05KyN1HDKG0QI90W8eJW4G0W200018uHh_JG1W44000040O0008009HZd_4eW
        DKHOo02Aah003081DyKe04aKf2nBI0408Xp4m2804mVB90GG01000W902Wm9gAPO50880i3J
        1zdHL0dCKOm3NfkG4425Ws14000wq9Y88OgJW82UyfSHGOn044000MCm11FsL70BKr11XJCL
        0q54QG10020e1004yeLT2iGa1A4yO5nnfGmZj8899H24aC3B990YsIajWq89PPHWGKWaa408
        91BoII21rv42IsIaa4YH3G0Ya0CP9H9KG204aaa0B099unhIVG1W081flNs8CEaE0I04000C
        004gp1J6KMmZWr9W5tZWGmZnAP99fJW2KGIGYiia49A9922IoE188D02GGIG6Dm58898Z6uY
        Q0mGoIIW4a4ae18W4abLd040aWaCQW2EMnWu4k8Dw3g1u50m00BOjmwDAare11FM4W1a0ORR
        R6Y1o0jtjPFJ3HWqscjDK20WPDssARVJi0vsssPDgGmZxG2Mo6IG2WS1RJ61A9G89jO30W89
        qIcaLYcaaPRsss9PDMGmZ7iEW11FYZ5i5CtWKgWGsGC302WG9O0M051PoWC9xKWeD102Uy19
        9991Fk300I0tqaaGm3e1IDIYGc00199fJ2w24Wbo8Db@3Uy1caaa1FkZR_9V03IQaDy5y9I9
        Hc0ycUca48X1TpUH4qY002UaXi6D8unTGMG6eqsacG9G04hORs18e2WDjHQXIW4e4a9D0m00
        ucieLV3enTA6qv11r38Mn09SLuK040WQmhWhH802000300WRcN8_gb0800r903400102084i
        5MX2m0981Wv5hQ007800I4DmKH8AnP26i2G11EvaG1WWE1aOV04222hFSGex63Y9RhQ0eBE1
        iospW@4AukG4YWO9H000T2G0X00002201eTml09Sz8KtZK00110e000FGKm5UFbYN4H0Smp0
        94q0J400225DXuuG8q0i000A4EnPDzJLL8qCSCHnBgHS2HawJFZnHsU184Zm2xSWGZ9HjqY2
        1W0Hu4GrDX2G000EE0XWJSIG00GGTN4yuHnBMWa4iaE1KW4ae49998GIGMfsbGq0Aa6W1Hub
        Jd098899hj062UKg0e9OdTpsLQX388uaW480004SIKZQHHp1E54aSrpCHq0JTSJ1@9eGSfFr
        9W1QII2w4G1GIIM1QCHaa@q9W3CH993UiX0EDBunb05040RRVp01W0eblDR1He0Wssaj3G00
        8VnssPRmZDnmMs62I2YOPRQ6H91Ie5j8B4WG8nMcjTGc4aOxW7RoYsYcJHAGO9Q9s919HgbC
        8R4c0DHodaD2oW6A8uHc0i0dA98HG000Y6aa48181IMIJae4W0Ag9H2@@VmZCvqVo74ai4vv
        VQV2MIceKlel991IuQtrVk0D91WW7R2O0HWQQ3R24100CjjP7GWY0sq6f5000WApq0AuTHUZ
        1YW6QCR00q080WqebPl9O0104WJlM8uac8000GG0200200010f60A8QWgYcUXY1IuPDjEQuW
        uxWwekDoQGXWkjAQ092Qm90200T2G0802Wu51Rj040100C0H31F6LF2QKzcLZWemM3541XJj
        5iGq09G0W0OrYi02004D01f3KmCUZTCW31EHrj2BKHJLh2mGi58Kr02HgGLijU4M8K30KW10
        0WuvHBgZgAx9imAx8u4esAbXe0U8S2dG800SZg2njeGm9LLA041Fw4IIIIabaaG99C2Uy0AB
        992M2I2ghgs2WGmIIYiWaWW7V2W00Gd0A0a00ia89Yj0AG0G0rfAtMPm5QGItVOGGg8yO01t
        puGaAN5To21F6LW65q9m18G99ZB5XW7bIGIYId068j99fJW2GJMI6yuKnNTmGCJ4yuI00G1a
        jjbPO0G0q_tcjW900GRR_sn901ab4y8KijjiXaae86sccHGIW4QIRs218II4aPQde5y8KMs6
        sSQIG23JBpE489I5aDRZWb496_iiHH6y8K0101SIIQ2X1G08189I00G1aaa09f900KQ7y8Kk
        _l_1D91HM_ltdib49UsF_RJIi46sT_71yHG11Fk400K0rqsq4A200uORpE8000ijDOBM000b
        a1FALPFDS10330yRivjX0G0u7n3QcHhR680100080GWheM8u4aksR10300@0H0A00Wk1A8I5
        ewBWW0r9RHKq01404FW4F_aGyL91G8YeJ07Y6OXI5S2G00Gd0Hy2Y1nB6roEL4yum54aIe1v
        010G8gbZFxoZW6Q2140GCCEq_AN40a0A6eWW3S84Hi6ByiWxFBD15292XeEwgNuiQBe0W080
        rI_Gm9E9G08Ox6740204tpKT2GX000m8ZrAunk0IIIs9G14aWq2Ua0Weia88881IMM6K7LT2
        i0GKIIa44a81B9HJ204d0PBnSLqd54e13j4aGu4ATAG140W0UCfie1o8mMRZWWYOBWYbaa49
        HP92IGIT2a0899hW7dAQ038919q9m14989Z6eWW6Mpsssc3000GRRRDEcID0P06020Ussc33
        02GBRBs03000rjPR52000_czjnsW7NGIjjTmZ7qu88r0W13RJRAA98oXjbP4ba9fwscjmIYa
        4JRss88IIYjpQ41haaa1FIWaaa4rsss1FYZnjbD5aaaWwssw4W0ksssIGIIK3RRp8A98un3m
        0000caa4v00GPZ4e1000GIIYa10WW7b1000W3JIIC404Wf9fHE600Wqa49D00402I4aq@_@V
        9HIIs7yO1aw@@zV99HI_@t@la499x@W7dnp@xFP899sv@x_4a48rv@x@2IYayxlxVO9oI60P
        DY0GRRRs2000mjjpQaWW7n1200WQQRR20040DjDx4W0Eijj2C000rsM6y8L1E5Nq0T5wM73H
        zw2PF0200OyA2_6OXg3G2800GWjDCz94HG0LP2TLp0Qn_DNK7z5yuOr0qMS2IzZh5HG0LKX5
        yqX31@XNmZjs9m2n90HW6VD99NH3GNmzP5H4WdNyND0n0100e608080843ZSHterTb84yeJ8
        899LMIIs9024a4bw40XW7xAQW4819944qqpDHRq0V4yun1QOGi5I1919GIIIcWaaa0DChJW4
        09994y8Uijjj7xp0s1001FAJNaJG100eJ022Ua19sss1F_Jd0CK3W31Fo0oijjW7@fJ06Gkj
        jr9m1r0GGmZCiZ811F6KNaM4y81WaaaO@@@xNIIYq@@VmZ@q5P2T2qW7IIo338mjjjzZ3A4y
        eFr00Hd094yujHQPGWJGtgs9DAxJQNTKTG3H34KmMd7yu@1DmIn5D4y8uzCQHCcJ611Q5U0T
        R1QS@01NnhKq0HC2G2J0Gm9zaX000uypPRbWam@G8Q0hG4004yOh1skMdDTKVoIj5SGf0G4y
        849mPGmZxqGd5boj0aaaiWw8I99994IIoe1Y8E1d010180000X00mL0N4uqmLCsG11RLBvM1
        FAOI56KHn12GIIYNyfW7HBG33YJeC880911H018800000aW44gIZ0W4a0r0W210GYQ0cWW44
        GQ0HG2I00G0041B800O00aW7400O00GG3Y008GD0cW00ae6W98G11a604vJc0ejjDR1005JI
        07000GsssXLYJd0Gm000eJ02Acq2TIIIXLY4rsssE18mssscJIIIGRRRs999Hgjjz4m1XLkJ
        d0J4Mf2G0000IIIYK00eOI2APa0IIIYXLgJd0J8X@@FVo3y999bF91C9991@@@xdaaibIFg1
        0aE1Qm799v714KCP2tFG0sssM5000XLIKd0D4MvR30yVeR@7Mv@XL_VBb77w6QXzVNaA@7SI
        bDpeUO@A73ZR1dyVm9p4M94HurGObnq9G6XxnMGGv6So@XLkRi5Y5M9qbCgHmZXLou11F_Vm
        Z@F0m@30yVmM@7yu@1F_V0Q@7So@XXzV0Q@7yu@1F_VmZ@73Zc1dyVmZ@7yu@1F_VmZ@7yu@
        30yV0D@7yu@1F_VmZ@7yu@XXzVe1@7Gp@1dyVmZ@7yu@1dyVmZ@7yu@1F_VmZ@7yOT040060
        u@104b000G0Db5D051F_VmZ@7yu@1er9800WW7@FCi@3Du@W7@Fun@3U48IGGI1F_Vm9@7So
        @1F_VmZo180ocjyD0002Osst60082GRxBJ00C0WjjSmZKm1008unSqos8HoIYLRRQ49911jj
        fiWa4i8ssmgHIYADW6aORRd6m11Fc3xJh4998qiDb5aaWams6_6IIGYORhxW7L0ssscTIIoq
        0S8unQ040b8f11e6028890002GY4q400808IIJ2T2mGQ04a3111FkZV@7IaWby_@t7HIMIu@
        Vt799B8u@FVFaaW1F652gjDQB0080msijD0040Opsc6GD04mqM08ung60u@cpck07q2Uy@W7
        @FuHW3qul8lcECi@3Du@2202G00G3094TZZz8KMmZ@7yeSr0eWI2IoW7@FaAZ3RfuF0M8QWg
        6MfXOBsI2IIIW63HGGIYa4a4199fe1i0IIIMd080aiaCuHj6sOYW7bf60Hw48YW7hf6WFw4W
        YW7hf60Ew4OYW7pf60Ew4mYW7jf60H2UyeQ089un@70mzf_N8Gz@3Uy@e23B6iDY9hE80001
        ezVmZ@7Yu@X6yV0DRdw3301002EfpE1e9u4QQp9cW7lfKED2Uqf22weJ08Wbaa4yOF1fs010
        0Wu4muV1Q21vn33GBQWB2EHvW7TQ4032IjAD9f91fUIG3e5yuEkjzDG002WssscG0020PRhW
        7vIQRJB0998YijbQiaa3UiAGQRJM099GYij9Raa4BntczDIoW7r2IIGID0688001GJIQmZPf
        aabm_@tFIIIIm_@tU0992Uigx78e6W6ejDj4yuob6Hm7W@F00E040060mYCyIu61ZY60XE1Y
        8QWd2Uy@W7TCUUD3UqM02001FEReil4Yu@XygNq0L4fYWO000sOGdQwG8uHXdw9Z6JYA2292
        iDyd8C0999fJIIoW7Zf609o0WWW7h0aaaLD06maaaCD032gxYUn88eEC88995ye81rTGylJN
        GWAxV4HV5N5D091sIUmZE5RX6H3u3aaWa0DK9unCH0008PRRh605mRRRJ400e_n62Ui8osss
        mIIIg1e12jjjQWaa2Uy9VRRRr0e0QRRR0999Yijj3UKA4000g999h1G10999rFgGmZBP@@@7
        WaaKD0AWbaa4q@@VzZD4y8IAjjjh1u02000rF2HmZ5F0m@1g@VmZ@7yu@1FoU0Qv5So@nZqQ
        e1@7Gp@1dyVD0PiMP3T2SH9ZK4yODr0iGGTI5XdA1F_Vm9@7yu@1QOKmZun1008uHFg1OaW7
        9XORRRmZUK3081FYKD0T4yuIr0qHmZBL3m81FYKD0Z4yu@nazVR166yu@1F_VmZQZ1008uHe
        14004fo@1d4OpCg7yu@1F_V99N01008u4f2Uycuuq8uHdA8eZW7t2800GGGo5So@1FkBSIIo
        W7@FE1O40008RRRp400G9ZD0sssEungaQRRlZ81ORRRBPKXW7TYssscHIII0RRRbCU0caaad
        0E8uHlqaaa4yOLy@@@BPi1YaaabCUGmZE9000eaH540000jjjL1000usssW7@V0W@3ev@W7@
        Fun@3UKqWxDDgT93X@@G325400G0D@7yu@1d4TmZtK3G71rzNCCJ7s2s40002UKOWaaabNeH
        mZM1IIKAunVBPKZW7fgaHA2UqfI6jWPIIY4tssW7vgan42UyfI6jmF99PmZFLoO61F_@00@7
        ir@1F_VmZ@7yu@1F_VOO@7Qm@1qyVmZ@7yu@1F_Vm9@7y8cnMKMW6h5yu@1F_VmZ@F0m@1ez
        VmM@7yu@1F_VmZ@7So@XXzV0D@7yu@1F_VmZ@7So@1dyVmZ@7yu@1F_VmZ@F0m@1ezVmM@7y
        u@1F_VmZ@7So@1F_V0D@7yu@1F_VmZ@@XnJ01002Ev@W71lDF2YjGaC088un@3Uy@W7@Fun@
        70u@0Q_Fun@3Uy@W7@Fun@3Hy@G3_FWc@3Uy@W7@FunU3Ev@W7@FsYd2Uy@W7@Fun@3Uy@10
        _FWc@3Uy@W7@Fun@3Uy@mm_FqW@3ev@WJ_Fun@3Uy@WJ_Fun@3Uy@W7@Fun@3Uy@1007G000
        04000W001qOMq035yu@1F_VmZyJ0008un@3Uy@G3_F0j@3Uy@W7BrIIMIrRA0IIKAuHiiaaa
        889H9un@70m00200XWG9G00WWJ_Funt81195y8B88993Uy@W7@Fun@3Uaq4Lg0400m00@lzO
        F1qGMq0z4yu@1FUr93J4yu@1FAP0Q2linVfRrqLjA4qWNtxsLmZ@7Gp@1F_VmZJLou44aai2
        US84baa1rvG4Uv4y8q1dyVe1MjeM51FwPi5i4DGM4aia2UKG100jQRR3W00G6yuNqsM81IIg
        PQRx4199HmZLnqssHIIIARORxd08GPRRMmZI900E9unou@@GYaaatx@@9III2@z@@Cf993Ua
        0f9991FM5800GjjjT04002Uyt10QBQBv2k@@W7@FuHt2SYiW7@F0DYM8PeW7RS00i800046s
        @X6yV11KiiH71qyVmZ@7y8MiaaWYZBXW7x9ekp2Uy@mM_Fua_MZWWOB83MIIID0B8191BQWB
        aWaW4Dm5r0OHd064ye6z9W1W0WWQ0QfZzBAP42E0001F2MMZ8Ko811FML9ZF4yuKbCYHmZGL
        oO5_9993UqgI6b8uHSNNy@Dxz9EEdMplaWwqAk7x2eGu0dI310GGmZ@7Ws@1s_Vm9GsZWj13
        @@00gP0008ua@3Ua619P9bof089HfuuO8un@3W6kWJ_FuaQhe0YaAC8s2f2qOjW6GBun@3Uy
        @W7nU0W@hf1uWj_FunsZyIjW7@FunGNH5je1GBun@3Gx@0QkEua@3UycI6n8un@3Uy@WJ_Fu
        HTYj0hW77lan32UCiI6F8un@3Uy@10_V0W@3sw@W7@Fun@3GR8C0001FsSm9@76s@X6CySeN
        4DG3xY6KmZ@7yu@1FIVm9@7ir@1FIUX24b8052000ajjjP200ean60RRR7yOLIjjjtHa0ijj
        j1FY5jjjDZaaa0sssAPy0C999F1SGmZUf9999ungu@@@NoO34999BPyWW7TI000G9ZA80000
        QRRh2000mjjj1F_@00@7Gp@1F2A100WW7BBQW72Uy@W7LC0Db3Ev@mm_V00801004Gp@H3Gp
        Sa15yu@1F2cWa4bW7@Fun@3sw@W7@1899Pv5Q4y8m1DiL9ZGm100eaH22Ua8ssssT2SG9ZJG
        ijjDuHVg10YE18eaHBOcaa8njjDuHSWjjjr9W2r0SG9ZP4yOGr0GGE444ye1bCQXVIIoW7Vg
        anC2Uy@u5@FwcP12004yOwHU1MWJe5yu@n9SO4426fo@1RTOF2s6qm@nOQmCcD5foV1F6TSS
        P4yu@11TO0D@7yOeLK41199hOBYAun@3Uy5qsssC0002U4hE1QWQRRRmZOr9041FwLd0D4yu
        @30yVzMx7eEj1F_VmZ@7Ws@1FwQ4UDiYNJbAiHq005yOxFzIH0Q@t9W90200YX9iWJ_FunUa
        Waa5yu@H6VPWj@7y8f9LOGi5S5y8qQQQRP000Wv@@tdaa4fcaMjP0000@@z@V9HIoRpss200
        00_c0Dmssss606q481r0eX60002000yF00W9100i500G2000o700WH000C0000HYaa4hsW40
        III2GIIY000m0048IIIYGIIID07Waaa4aaaKD0W0m80eoc5G2000I0089W34000i3q1GIIIA
        YeXUHKeqG3g184400Wr0eG317C0W1QRRRP9PRpXaa4b000WssMjvooiDB9HIU000WRpssIhs
        sM499910000ijjjXjjjLGIIoU04K3W6Q000O300mb000600GS24m500GI00m6048999njja4
        dssMTsssiRIIaaPPHIijLRxjDRRF9IIIaZNQWsss6IIII89991jjjPfjjLB99PD0O8100m40
        00t200OM000J000a900Wi100ODGG350aaa4822m0070999HWa0mG2AKVW2jKQGD0W0GI0O0W
        5W000C0W2044062e09910000Ia008qkG18300k38XQ0A8aX9g1WY69Ce604MoiWE1EGDDjDd
        aaas6E0IIRh099921000400odaWM9K0RRRh899fm9Ee60DKJIIY900uKY3mcaa8I0000GIY4
        qsMjXjjQxIIaaO@x@@jLRR7hsss4999X_@@Vijjj1RRRpaaa4X@@V@ORRscsskVW04@@@r0i
        XD999O999gaaa8_ba8PJIYarIYaC99IIy9II2jPRRjPRRpcjjjljjjTsssswsssyQRRpORRp
        sRRRD048QRRRu12ORRR3RRRpijjDZjjDRijjr0WXD999jjjjscaa8tssgTJIYaPRhs_D9IIi
        jQRF02Sw@WwEDun@3Uy@0D_FGZ@3qu@0D_FGZ@ZJ0A0I00rDeGge75eXYL4yGq0BLwb11SsS
        iVb5mv@1qyVS26TO711QiqE0KqMW4veWGW6OKIH1nMqnOV44RX8P0GGW6b8898JGIIID07G0
        I0iJ054a4a4DW24W44g101IGGG54m0199X0DAvR17g1uW4KAe6060901K3m2lUBH33OqX812
        080G000010400010W0020WW0r045;
    INTEGER CHECKSUM =21837;
ENDDATA;


PROCEDURE DO_EXIT USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $81;
    WAIT IDLE, 250 USEC;
    IRSCAN 8, $81, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==0) ) THEN GOTO Label_0;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $07;
    WAIT IDLE, 1 CYCLES;
    WAIT IDLE, 200 USEC;
    Label_0:
    IRSCAN 8, $ff;
    WAIT IDLE, 200 USEC;
    WAIT RESET, 3 CYCLES;
    EXIT STATUS;
ENDPROC;

PROCEDURE DO_READ_SECURITY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a4;
    WAIT IDLE, 3 CYCLES;
    DRSCAN 44, $00000000000, CAPTURE SECREG[];
    ULUWE = SECREG[ULUWE_BITLOCATION];
    ULARE = SECREG[ULARE_BITLOCATION];
    ULUPC = SECREG[ULUPC_BITLOCATION];
    ULUFE = SECREG[ULUFE_BITLOCATION];
    ULUFP = SECREG[ULUFP_BITLOCATION];
    ULUFJ = SECREG[ULUFJ_BITLOCATION];
    ULFLR = SECREG[ULFLR_BITLOCATION];
    ULULR = SECREG[ULULR_BITLOCATION];
    ULAWE = SECREG[ULAWE_BITLOCATION];
    ULARD = SECREG[ULARD_BITLOCATION];
    ULOPT[1] = SECREG[ULOPT1_BITLOCATION];
    ULOPT[0] = SECREG[ULOPT0_BITLOCATION];
ENDPROC;

PROCEDURE DO_OUTPUT_SECURITY USES GV;
    PRINT "Security Settings :";
    IF ( ! (ULUFP==1) ) THEN GOTO Label_1;
    PRINT "FlashROM Write/Erase protected by pass key.";
    Label_1:
    IF ( ! (ULUFJ==1) ) THEN GOTO Label_2;
    PRINT "FlashROM Read protected by pass key.";
    Label_2:
    IF ( ! (ULAWE==1) ) THEN GOTO Label_3;
    PRINT "Array Write/Erase protected by pass key.";
    Label_3:
    IF ( ! (ULARD==1) ) THEN GOTO Label_4;
    PRINT "Array Verify protected by pass key.";
    Label_4:
    IF ( ! (ULUFE==1) ) THEN GOTO Label_5;
    PRINT "Encrypted FlashROM Programming Enabled.";
    Label_5:
    IF ( ! (ULARE==1) ) THEN GOTO Label_6;
    PRINT "Encrypted FPGA Array Programming Enabled.";
    Label_6:
    PRINT "=========================================";
ENDPROC;

PROCEDURE DO_QUERY_SECURITY USES DO_READ_SECURITY,DO_OUTPUT_SECURITY;
    CALL DO_READ_SECURITY;
    CALL DO_OUTPUT_SECURITY;
ENDPROC;

PROCEDURE READ_UROW USES BITSTREAM,GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE UROW[];
    SUROWALGOVERSION[6..0] = $00;
    IF ( ! ( (UROW[5]==0)&&(UROW[0]==1)) ) THEN GOTO Label_7;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    Label_7:
    IF ( ! ( (UROW[5]==1)&&(UROW[0]==0)) ) THEN GOTO Label_8;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    SUROWALGOVERSION[6] = 1;
    Label_8:
    SUROWCHECKSUM[15..0] = UROW[127..112];
    SUROWCYCLECOUNT = INT(UROW[111..102]);
    SUROWDESIGNNAME[69..0] = UROW[101..32];
    SUROWPROGMETHOD[2..0] = UROW[31..29];
    SUROWALGOVERSION[3..0] = UROW[28..25];
    SUROW_PKG_TYPE[5..0] = UROW[22..17];
    SUROW_SW_VERSION[6..0] = UROW[16..10];
    SUROWPROGRAMSW[3..0] = UROW[9..6];
    SUROW_SRAM_DISTURB[0] = UROW[4];
    SUROW_SPEED_GRADE[2..0] = UROW[3..1];
    ACT_UROW_CYCLE_COUNT = SUROWCYCLECOUNT;
ENDPROC;

PROCEDURE FIX_INT_ARRAYS USES GV;
    IF ( ! (HEX[0]!=48) ) THEN GOTO Label_9;
    FOR I = 0 TO 7;
        TEMP = HEX[I];
        HEX[I] = HEX[(15-I)];
        HEX[(15-I)] = TEMP;
    NEXT I;
    Label_9:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISP_CHKSUM_DESIGN USES GV,FIX_INT_ARRAYS;
    CALL FIX_INT_ARRAYS;
    IF ( ! (INT(SUROWCHECKSUM[15..0])==65535) ) THEN GOTO Label_10;
    PRINT "CHECKSUM: ";
    Label_10:
    IF ( ! (INT(SUROWCHECKSUM[15..0])!=65535) ) THEN GOTO Label_11;
    PRINT "CHECKSUM: ",CHR$(HEX[INT(SUROWCHECKSUM[15..12])]),CHR$(HEX[INT(SUROWCHECKSUM[11..8])])
        ,CHR$(HEX[INT(SUROWCHECKSUM[7..4])]),CHR$(HEX[INT(SUROWCHECKSUM[3..0])]);
    Label_11:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])==2147483647)&&(INT(SUROWDESIGNNAME[31..61])==2147483647))&&(INT(SUROWDESIGNNAME[62..69])==255)) ) THEN GOTO Label_12;
    PRINT "Design Name: ";
    Label_12:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])!=2147483647)||(INT(SUROWDESIGNNAME[31..61])!=2147483647))||(INT(SUROWDESIGNNAME[62..69])!=255)) ) THEN GOTO Label_13;
    PRINT "Design Name: ",CHR$(INT(SUROWDESIGNNAME[63..69])),CHR$(INT(SUROWDESIGNNAME[56..62]))
        ,CHR$(INT(SUROWDESIGNNAME[49..55])),CHR$(INT(SUROWDESIGNNAME[42..48])),CHR$(INT(SUROWDESIGNNAME[35..41]))
        ,CHR$(INT(SUROWDESIGNNAME[28..34])),CHR$(INT(SUROWDESIGNNAME[21..27])),CHR$(INT(SUROWDESIGNNAME[14..20]))
        ,CHR$(INT(SUROWDESIGNNAME[7..13])),CHR$(INT(SUROWDESIGNNAME[0..6]));
    Label_13:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISPLAY_UROW USES BITSTREAM,CONSTBLOCK,GV,DISP_CHKSUM_DESIGN;
    EXPORT "USER_ROW", UROW[127..0];
    PRINT "User information: ";
    CALL DISP_CHKSUM_DESIGN;
    IF ( ! (FLAGDISPLAYCYC==1) ) THEN GOTO Label_14;
    PRINT "CYCLE COUNT: ",SUROWCYCLECOUNT;
    Label_14:
    INTEGER TMPINT =INT(SUROWPROGMETHOD[]);
    INTEGER TMPINT2 =0;
    INTEGER TMPINT3 =0;
    INTEGER TMPINT4 =0;
    INTEGER TMPINT5 =0;
    IF ( ! (TMPINT==IEEE1532) ) THEN GOTO Label_15;
    PRINT "Programming Method: IEEE1532";
    Label_15:
    IF ( ! (TMPINT==STAPL) ) THEN GOTO Label_16;
    PRINT "Programming Method: STAPL";
    Label_16:
    IF ( ! (TMPINT==DIRECTC) ) THEN GOTO Label_17;
    PRINT "Programming Method: DirectC";
    Label_17:
    IF ( ! (TMPINT==PDB) ) THEN GOTO Label_18;
    PRINT "Programming Method: PDB";
    Label_18:
    IF ( ! (TMPINT==SVF) ) THEN GOTO Label_19;
    PRINT "Programming Method: SVF";
    Label_19:
    PRINT "Algorithm Version: ",INT(SUROWALGOVERSION[6..0]);
    TMPINT = INT(SUROW_SPEED_GRADE[]);
    IF ( ! (TMPINT==GRADE_UNSPEC) ) THEN GOTO Label_20;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_20:
    IF ( ! (TMPINT==GRADE_1) ) THEN GOTO Label_21;
    PRINT "Device Speed Grade: -1";
    Label_21:
    IF ( ! (TMPINT==GRADE_2) ) THEN GOTO Label_22;
    PRINT "Device Speed Grade: -2";
    Label_22:
    IF ( ! (TMPINT==GRADE_3) ) THEN GOTO Label_23;
    PRINT "Device Speed Grade: -3";
    Label_23:
    IF ( ! (TMPINT==GRADE_F) ) THEN GOTO Label_24;
    PRINT "Device Speed Grade: -F";
    Label_24:
    IF ( ! (TMPINT==GRADE_STD) ) THEN GOTO Label_25;
    PRINT "Device Speed Grade: STD";
    Label_25:
    IF ( ! (TMPINT==GRADE_4) ) THEN GOTO Label_26;
    PRINT "Device Speed Grade: -4";
    Label_26:
    IF ( ! (TMPINT==GRADE_UNDEF) ) THEN GOTO Label_27;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_27:
    TMPINT = INT(SUROWPROGRAMSW[]);
    IF ( ! (TMPINT==FP) ) THEN GOTO Label_28;
    PRINT "Programmer: FlashPro";
    Label_28:
    IF ( ! (TMPINT==FPLITE) ) THEN GOTO Label_29;
    PRINT "Programmer: FlashPro Lite";
    Label_29:
    IF ( ! (TMPINT==FP3) ) THEN GOTO Label_30;
    PRINT "Programmer: FlashPro3";
    Label_30:
    IF ( ! (TMPINT==FP4) ) THEN GOTO Label_31;
    PRINT "Programmer: FlashPro4";
    Label_31:
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_32;
    PRINT "Programmer: Sculptor WIN";
    Label_32:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_33;
    PRINT "Programmer: BP Programmer";
    Label_33:
    IF ( ! (TMPINT==DIRECTCP) ) THEN GOTO Label_34;
    PRINT "Programmer: DirectC";
    Label_34:
    IF ( ! (TMPINT==STP) ) THEN GOTO Label_35;
    PRINT "Programmer: Actel JAM Player";
    Label_35:
    IF ( ! ( ( ( (TMPINT==FP)||(TMPINT==FPLITE))||(TMPINT==FP3))||(TMPINT==FP4)) ) THEN GOTO Label_51;
    TMPINT2 = INT(SUROW_SW_VERSION[]);
    IF ( ! (TMPINT2==FP33) ) THEN GOTO Label_36;
    PRINT "Software: FlashPro v3.3";
    Label_36:
    IF ( ! (TMPINT2==FP34) ) THEN GOTO Label_37;
    PRINT "Software: FlashPro v3.4";
    Label_37:
    IF ( ! (TMPINT2==FP40) ) THEN GOTO Label_38;
    PRINT "Software: FlashPro v4.0";
    Label_38:
    IF ( ! (TMPINT2==FP41) ) THEN GOTO Label_39;
    PRINT "Software: FlashPro v4.1";
    Label_39:
    IF ( ! (TMPINT2==FP42) ) THEN GOTO Label_40;
    PRINT "Software: FlashPro v4.2";
    Label_40:
    IF ( ! (TMPINT2==FP50) ) THEN GOTO Label_41;
    PRINT "Software: FlashPro v5.0";
    Label_41:
    IF ( ! (TMPINT2==FP51) ) THEN GOTO Label_42;
    PRINT "Software: FlashPro v5.1";
    Label_42:
    IF ( ! (TMPINT2==FP60) ) THEN GOTO Label_43;
    PRINT "Software: FlashPro v6.0";
    Label_43:
    IF ( ! (TMPINT2==FP61) ) THEN GOTO Label_44;
    PRINT "Software: FlashPro v6.1";
    Label_44:
    IF ( ! (TMPINT2==FP62) ) THEN GOTO Label_45;
    PRINT "Software: FlashPro v6.2";
    Label_45:
    IF ( ! (TMPINT2==FP84) ) THEN GOTO Label_46;
    PRINT "Software: FlashPro v8.4";
    Label_46:
    IF ( ! (TMPINT2==FP85) ) THEN GOTO Label_47;
    PRINT "Software: FlashPro v8.5";
    Label_47:
    IF ( ! (TMPINT2==FP86) ) THEN GOTO Label_48;
    PRINT "Software: FlashPro v8.6";
    Label_48:
    IF ( ! (TMPINT2==FP90) ) THEN GOTO Label_49;
    PRINT "Software: FlashPro v9.0";
    Label_49:
    IF ( ! (TMPINT2==FP91) ) THEN GOTO NOT_FP91;
    PRINT "Software: FlashPro v9.1";
    NOT_FP91:
    IF ( ! (TMPINT2==FP100) ) THEN GOTO NOT_FP100;
    PRINT "Software: FlashPro v10.0";
    NOT_FP100:
    IF ( ! (TMPINT2==FP_11) ) THEN GOTO NOT_FP_11;
    PRINT "Software: FlashPro v11.0";
    NOT_FP_11:
    IF ( ! (TMPINT2==FP_11_1) ) THEN GOTO NOT_FP_11_1;
    PRINT "Software: FlashPro v11.1";
    NOT_FP_11_1:
    IF ( ! (TMPINT2==UNKNOWN) ) THEN GOTO Label_50;
    PRINT "Software: FlashPro vX.X";
    Label_50:
    LABEL_SEPARATOR = 0;
    Label_51:
    IF ( ! ( (TMPINT==SCULPTW)||(TMPINT==BPW)) ) THEN GOTO Label_55;
    TMPINT3 = (INT(SUROW_SW_VERSION[6..5])+SCULPTORMAJORBASE);
    TMPINT4 = (INT(SUROW_SW_VERSION[4..1])+SCULPTORMINORBASE);
    TMPINT5 = 0;
    IF ( ! (SUROW_SW_VERSION[0]==1) ) THEN GOTO Label_52;
    TMPINT5 = 1;
    Label_52:
    INTEGER CURRPGM =INT(ACT_UROW_PROGRAM_SW[3..0]);
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_53;
    IF ( ! ( (CURRPGM==FP3)||(CURRPGM==FP4)) ) THEN GOTO NOT_FP3_FP4;
    PRINT "NOTE: The Sculptor Windows version number below should be converted to HEX.";
    NOT_FP3_FP4:
    PRINT "Software: Sculptor Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_53:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_54;
    IF ( ! ( (CURRPGM==FP3)||(CURRPGM==FP4)) ) THEN GOTO NOT_FP3_FP4_BPW;
    PRINT "NOTE: The BP Windows version number below should be converted to HEX.";
    NOT_FP3_FP4_BPW:
    PRINT "Software: BP Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_54:
    LABEL_SEPARATOR = 0;
    Label_55:
    PRINT "=========================================";
ENDPROC;

PROCEDURE READ_F_ROW USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $f9;
    DRSCAN 3, FADDR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $bf;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[];
ENDPROC;

PROCEDURE DO_DEVICE_INFO USES GV,READ_UROW,DISPLAY_UROW,READ_F_ROW;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0e;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE BUFF32[];
    EXPORT "SILSIG", BUFF32[];
    IRSCAN 8, $84, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==1) ) THEN GOTO CORE_NOT_ENABLED;
    PRINT "FPGA Array is programmed and enabled.";
    CORE_NOT_ENABLED:
    IF ( ! (BUFF128[2]==0) ) THEN GOTO CORE_ENABLED;
    PRINT "FPGA Array is not enabled.";
    CORE_ENABLED:
    CALL READ_UROW;
    CALL DISPLAY_UROW;
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    PRINT "=========================================";
ENDPROC;

PROCEDURE INIT_AES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $dd;
    DRSCAN 128, $00000000000000000000000000000000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
ENDPROC;

PROCEDURE DO_VERIFY_DEVICE_INFO USES GV,BITSTREAM,DO_EXIT,DO_READ_SECURITY,READ_UROW
    ,DISP_CHKSUM_DESIGN;
    CALL READ_UROW;
    CALL DISP_CHKSUM_DESIGN;
    CALL DO_READ_SECURITY;
    BUFF32[31..0] = BOOL(CHECKSUM);
    UROW[127..112] = BUFF32[15..0];
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],$ffff003fffffffffffffffff00000000
        ,PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_CMP_OK;
    STATUS = -43;
    PRINT "Failed to verify design information.";
    UNIQUEEXITCODE = 32772;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_CMP_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_IDCODE_ONLY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[];
    EXPORT "IDCODE", ID[];
ENDPROC;

PROCEDURE VERIFY_RLOCK USES GV;
    IRSCAN 8, $84,COMPARE $04,$04,PASS;
ENDPROC;

PROCEDURE DO_VERIFY_PGM_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_PGM_PASS;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32891;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_PGM_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_VERIFY_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_VERIFY_PASS;
    STATUS = 11;
    PRINT "FPGA Array is not enabled.";
    UNIQUEEXITCODE = 32892;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_VERIFY_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE VERIFY_ID_DMK USES GV,DO_EXIT,INIT_AES;
    CALL INIT_AES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0a;
    DRSCAN 128, M7BUFF[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 256 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[],COMPARE $c0000000000000000000000000000000
        ,$c0000000000000000000000000000000,PASS;
    IF ( ! (BUFF128[127]==0) ) THEN GOTO M7VERDONE;
    STATUS = -31;
    PRINT "Failed to verify AES Sec.";
    UNIQUEEXITCODE = 32775;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    M7VERDONE:
    IF ( ! ( (BUFF128[126]==0)||(BM7DEVICE==0)) ) THEN GOTO MXIDOK;
    IF ( ! ( (BUFF128[126]==1)&&(BM7DEVICE==0)) ) THEN GOTO LDETECTM1;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "Target is an M7 device.";
    UNIQUEEXITCODE = 32776;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    LDETECTM1:
    IF ( ! (BUFF128[126]==0) ) THEN GOTO Label_58;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0a;
    DRSCAN 128, M1BUFF[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 256 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[],COMPARE $c0000000000000000000000000000000
        ,$c0000000000000000000000000000000,PASS;
    IF ( ! (BUFF128[127]==0) ) THEN GOTO M1VERDONE;
    STATUS = -31;
    PRINT "Failed to verify AES Sec.";
    UNIQUEEXITCODE = 32777;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    M1VERDONE:
    BOOLEAN BTMPBUFFBIT126 = BUFF128[126];
    IF ( ! ( (BTMPBUFFBIT126==1)&&(BM1DEVICE==0)) ) THEN GOTO REGDEV;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "Target is an M1 device.";
    UNIQUEEXITCODE = 32778;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    REGDEV:
    IF ( ! ( (BTMPBUFFBIT126==0)&&(BM7DEVICE==1)) ) THEN GOTO Label_56;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "The Target is not an M7 Device.";
    UNIQUEEXITCODE = 32781;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_56:
    IF ( ! ( (BTMPBUFFBIT126==0)&&(BM1DEVICE==1)) ) THEN GOTO Label_57;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "The Target is not an M1 Device.";
    UNIQUEEXITCODE = 32782;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_57:
    LABEL_SEPARATOR = 0;
    Label_58:
    LABEL_SEPARATOR = 0;
    MXIDOK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE VERIFY_IDCODE USES GV,PARAMETERS,DO_EXIT,VERIFY_ID_DMK;
    FREQUENCY (FREQ*1000000);
    WAIT RESET, 5 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    DRSCAN 32, $00000000;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[],COMPARE IDCODEVALUE[],IDMASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO IDOK;
    STATUS = 6;
    PRINT "Failed to verify IDCODE";
    UNIQUEEXITCODE = 32797;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    IDOK:
    CALL VERIFY_ID_DMK;
    IDREV = INT(ID[31..28]);
    IDFAB = INT(ID[24..24]);
ENDPROC;

PROCEDURE IS_SECOK USES GV,DO_EXIT;
    IF ( ! (SECKEY_OK==0) ) THEN GOTO SECOK;
    STATUS = -35;
    PRINT "Failed to match pass key.";
    UNIQUEEXITCODE = 32799;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SECOK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_R USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPR;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text verification is prohibited.";
    UNIQUEEXITCODE = 32800;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYEPR:
    IF ( ! (ULARD==1) ) THEN GOTO SKIPRCHK1;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32804;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SKIPRCHK1:
    IF ( ! (ULARD==0) ) THEN GOTO Label_59;
    CHKSEC = 0;
    Label_59:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_W USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULAWE==1) ) THEN GOTO ARRAYWP;
    STATUS = -28;
    PRINT "FPGA Array Write/Erase is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32805;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYWP:
    IF ( ! (ULARD==1) ) THEN GOTO ARRAYRPW;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32806;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYRPW:
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPW;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text programming is prohibited.";
    CALL DO_EXIT;
    ARRAYEPW:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE BP_VER USES GV;
    BOOLEAN PLAYER_VERSION_BOOLEAN[32];
    PLAYER_VERSION_BOOLEAN[31..0] = BOOL(PLAYERVERSIONVARIABLE);
    INTEGER PLAYER_MAJOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[23..16])-SCULPTORMAJORBASE);
    INTEGER PLAYER_MINOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[15..8])-SCULPTORMINORBASE);
    ACT_UROW_SW_VERSION[6..5] = BOOL(PLAYER_MAJOR_VERSION);
    ACT_UROW_SW_VERSION[4..1] = BOOL(PLAYER_MINOR_VERSION);
    ACT_UROW_SW_VERSION[0] = PLAYER_VERSION_BOOLEAN[0];
    ACT_UROW_PROGRAM_SW[3..0] = BOOL(PLAYERVERSIONSWVARIABLE);
ENDPROC;

PROCEDURE POLL_PROGRAM USES GV;
    INTEGER ILOOP_0;
    FOR ILOOP_0 = 16381 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 100 USEC;
        DRSCAN 5, $00,COMPARE $00,$0b,PASS;
        IF PASS THEN ILOOP_0 = 0;
    NEXT ILOOP_0;
ENDPROC;

PROCEDURE SET_PRG_ARRAY USES GV;
    ISPRGARRAY = 1;
ENDPROC;

PROCEDURE DO_INITIALIZE USES GV,DO_EXIT,READ_F_ROW,DO_CHECK_R,DO_CHECK_W,BP_VER;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $7f;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 50 USEC;
    BSR[707..0] = BSRPATTERN[707..0];
    BOOLEAN SHIFT_DATA[708];
    IRSCAN 8, $01;
    DRSCAN 708, BSR[];
    WAIT IDLE, 1 CYCLES;
    DRSCAN 708, SHIFT_DATA[], CAPTURE SAMPLE_DEVICE[];
    FOR I = 0 TO 707;
        IF ( ! (SAMPLEMASK[I]==1) ) THEN GOTO Label_60;
        BSR[I] = SAMPLE_DEVICE[I];
        Label_60:
        LABEL_SEPARATOR = 0;
    NEXT I;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $01;
    DRSCAN 708, BSR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $80;
    DRSCAN 18, $00000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 1875 USEC;
    DRSCAN 18, $00000, CAPTURE ISC_CONFIG_RESULT[],COMPARE $30000,$30000,PASS;
    IF ( ! (PASS==0) ) THEN GOTO CRCOK;
    STATUS = 5;
    PRINT "Failed to enter programming mode.";
    EXPORT "ISC_Config_Result", ISC_CONFIG_RESULT[];
    UNIQUEEXITCODE = 32850;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    CRCOK:
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    IF ( ! (CHKARRAY==1) ) THEN GOTO SKIPCHKARRAY;
    IF ( ! (ARRAYRONLY==0) ) THEN GOTO Label_61;
    CALL DO_CHECK_W;
    Label_61:
    IF ( ! (ARRAYRONLY==1) ) THEN GOTO Label_62;
    CALL DO_CHECK_R;
    Label_62:
    LABEL_SEPARATOR = 0;
    SKIPCHKARRAY:
    IF ( ! (PLAYERVERSIONVARIABLE!=0) ) THEN GOTO Label_63;
    CALL BP_VER;
    Label_63:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_INITIALIZE USES GV,DO_INITIALIZE;
    CHKFROM = 0;
    CHKARRAY = 0;
    CHKNVM = 0;
    CHKSEC = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NW_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NW_INITIALIZE USES DO_INITIALIZE,NW_INITIALIZE_COMMON;
    CALL NW_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NR_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NR_INITIALIZE USES DO_INITIALIZE,NR_INITIALIZE_COMMON;
    CALL NR_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AW_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AR_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE W_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE R_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    FROMRONLY = 0;
    CHKFROM = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE POLL_ERASE USES GV;
    PASS = 0;
    INTEGER ILOOP_1;
    FOR ILOOP_1 = 262141 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 1000 USEC;
        DRSCAN 5, $00,COMPARE $00,$03,PASS;
        IF PASS THEN ILOOP_1 = 0;
    NEXT ILOOP_1;
ENDPROC;

PROCEDURE UFROM_DISTURB USES GV;
    FOR FROMROWNUMBER = NUMBEROFFROMROWS TO 1 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9f;
        DRSCAN 3, BOOL((FROMROWNUMBER-1));
        WAIT IDLE, 1 CYCLES;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9b;
        DRSCAN 128, $ffffffffffffffffffffffffffffffff;
        WAIT IDLE, 5 CYCLES;
        WAIT IDLE, 10000 USEC;
    NEXT FROMROWNUMBER;
ENDPROC;

PROCEDURE PROGRAM_UROW USES GV,BITSTREAM,DO_EXIT,POLL_PROGRAM;
    IF ( ! (ISERASEONLY==0) ) THEN GOTO SKIP_CYC_INCREMENT;
    IF ( ! (ISPRGARRAY==1) ) THEN GOTO NOT_PGM_ARRAY;
    IF ( ! ( ( ( (INT(UROW[31..0])==-1)&&(INT(UROW[63..32])==-1))&&(INT(UROW[95..64])==-1))&&(INT(UROW[127..96])==-1)) ) THEN GOTO NOT_CORRUPTED_CYCLE_COUNT;
    ACT_UROW_CYCLE_COUNT = 0;
    NOT_CORRUPTED_CYCLE_COUNT:
    IF ( ! (ACT_UROW_CYCLE_COUNT<1000) ) THEN GOTO MAX_CYCLE_COUNT;
    ACT_UROW_CYCLE_COUNT = (ACT_UROW_CYCLE_COUNT+1);
    MAX_CYCLE_COUNT:
    LABEL_SEPARATOR = 0;
    NOT_PGM_ARRAY:
    LABEL_SEPARATOR = 0;
    SKIP_CYC_INCREMENT:
    IF ( ! (ISERASEONLY==1) ) THEN GOTO Label_64;
    UROW[] = $ffffffffffffffffffffffffffffffff;
    Label_64:
    IF ( ! ( (ISERASEONLY==0)||(ISRESTOREDESIGN==1)) ) THEN GOTO SKIP_DESIGN_INFO;
    BUFF32[31..0] = BOOL(CHECKSUM);
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_65;
    UROW[127..112] = BUFF32[15..0];
    Label_65:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_66;
    UROW[127..112] = SUROWCHECKSUM[15..0];
    Label_66:
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_67;
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    Label_67:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_68;
    UROW[101..32] = SUROWDESIGNNAME[69..0];
    Label_68:
    LABEL_SEPARATOR = 0;
    SKIP_DESIGN_INFO:
    BUFF32[31..0] = BOOL(ACT_UROW_CYCLE_COUNT);
    UROW[111..102] = BUFF32[9..0];
    UROW[31..29] = ACT_UROW_PROG_METHOD[2..0];
    UROW[28..25] = ACT_UROW_ALGO_VERSION[3..0];
    UROW[16..10] = ACT_UROW_SW_VERSION[6..0];
    UROW[9..6] = ACT_UROW_PROGRAM_SW[3..0];
    UROW[4] = SUROW_SRAM_DISTURB[0];
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==1) ) THEN GOTO Label_69;
    UROW[5] = 1;
    UROW[0] = 0;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_69:
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==0) ) THEN GOTO Label_70;
    UROW[5] = 0;
    UROW[0] = 1;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_70:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a7;
    DRSCAN 128, UROW[];
    WAIT IDLE, 15 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO PROGRAM_OK3;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32853;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    PROGRAM_OK3:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],UROW_MASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_OK;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32854;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE FAIL_ERASE USES GV,DO_EXIT;
    STATUS = 8;
    PRINT "Failed Erase Operation";
    UNIQUEEXITCODE = 32855;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
ENDPROC;

PROCEDURE EXE_ERASE USES BITSTREAM,GV,READ_UROW,POLL_ERASE,PROGRAM_UROW,FAIL_ERASE;
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO SKIPRUROW;
    CALL READ_UROW;
    EXPORT "ACTEL_SLOG_UROW", UROW[];
    SKIPRUROW:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $85;
    DRSCAN 23, COMBERASESELECT[];
    WAIT IDLE, 3 CYCLES;
    CALL POLL_ERASE;
    IF ( ! (PASS==0) ) THEN GOTO ERASEOK;
    CALL FAIL_ERASE;
    ERASEOK:
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO Label_71;
    CALL PROGRAM_UROW;
    Label_71:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_ERASE USES BITSTREAM,GV,EXE_ERASE;
    PRINT "Erase ...";
    COMBERASESELECT[22..0] = $004000;
    COMBERASESELECT[0] = 1;
    CALL EXE_ERASE;
    PRINT "Completed erase";
    IF ( ! (ISPRGARRAY==1) ) THEN GOTO NOT_PGM_ARRAY_ERASE;
    BUFF32[31..0] = BOOL(CHECKSUM);
    EXPORT "CHECKSUM: ", BUFF32[15..0];
    NOT_PGM_ARRAY_ERASE:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY USES GV,EXE_ERASE;
    PRINT "Erase FPGA Array ...";
    COMBERASESELECT[22..0] = $004001;
    CALL EXE_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ONLY USES GV,DO_ERASE;
    ISERASEONLY = 1;
    CALL DO_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY_ONLY USES GV,DO_ERASE_ARRAY;
    ISERASEONLY = 1;
    CALL DO_ERASE_ARRAY;
ENDPROC;

PROCEDURE DO_ERASE_ALL USES GV,UFROM_DISTURB,EXE_ERASE;
    IF ( ! ( (BM7DEVICE==1)||(BM1DEVICE==1)) ) THEN GOTO Label_72;
    PRINT "Erase FPGA Array and FlashROM ...";
    Label_72:
    IF ( ! ( (BM7DEVICE!=1)&&(BM1DEVICE!=1)) ) THEN GOTO Label_73;
    PRINT "Erase FPGA Array, FlashROM and Security Settings ...";
    Label_73:
    COMBERASESELECT[22..0] = $7fc00f;
    ISERASEONLY = 1;
    CALL EXE_ERASE;
    CALL UFROM_DISTURB;
ENDPROC;

PROCEDURE LOAD_ROW_DATA USES BITSTREAM,GV;
    FOR SDTILE = 1 TO NUMBEROFSDTILES;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, DATASTREAM[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT SDTILE;
ENDPROC;

PROCEDURE EXE_PROGRAM USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $83;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_74;
    STATUS = 10;
    PRINT "Failed to program FPGA array at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32856;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_74:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE EXE_VERIFY USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_75;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32857;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_75:
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_76;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32858;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_76:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 264 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_77;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32859;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_77:
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_78;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32860;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_78:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_PROGRAM USES GV,LOAD_ROW_DATA,EXE_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Programming FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_0;
    FOR IREPEAT_0 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_PROGRAM;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_79;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_PGM_A:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_PGM_A:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_79:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_0;
ENDPROC;

PROCEDURE DO_VERIFY USES GV,LOAD_ROW_DATA,EXE_VERIFY;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Verifying FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_1;
    FOR IREPEAT_1 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_VERIFY;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_80;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_VER_ARRAY:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_VER_ARRAY:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_80:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_1;
    PRINT "        Verifying FPGA Array -- pass";
ENDPROC;

PROCEDURE DO_VERIFY_BOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 0;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_VERIFY_EOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 1;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_PROGRAM_RLOCK USES GV,DO_EXIT,POLL_PROGRAM;
    DATAINDEX = 0;
    INTEGER IREPEAT_2;
    FOR IREPEAT_2 = NUMBEROFSDTILES - 1 TO 0 STEP -1;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, RLOCK[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT IREPEAT_2;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8c;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_81;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32862;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_81:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_READ_IDCODE USES READ_IDCODE_ONLY;
    WAIT RESET, 5 CYCLES;
    CALL READ_IDCODE_ONLY;
    EXIT 0;
ENDPROC;


CRC 4B08;
